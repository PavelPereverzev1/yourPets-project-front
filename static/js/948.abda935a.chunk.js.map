{"version":3,"file":"static/js/948.abda935a.chunk.js","mappings":"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","sources":["components/BackgroundImg/BackgroundImg.styled.js","components/BackgroundImg/BackgroundImg.jsx","components/TitleComponent/TitleComponent.styled.js","components/TitleComponent/TitleComponent.jsx","pages/AddPetPage/AddPetPage.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.jsx","components/AddPetForm/StepsBlock/StepsBlock.styled.js","components/AddPetForm/StepsBlock/StepsBlock.jsx","components/AddPetForm/ErrorComponent/ErrorComponent.styled.js","components/AddPetForm/ErrorComponent/ErrorComponent.jsx","components/AddPetForm/Step1/ChooseOptionForm.styled.js","components/AddPetForm/ButtonsBlock/ButtonsBlock.styled.js","components/AddPetForm/Step1/ChooseOptionForm.jsx","components/AddPetForm/Step2/PersonalDetailsForm.styled.js","components/AddPetForm/Step2/PersonalDetailsForm.jsx","components/AddPetForm/Step3/AddMoreDetails.styled.js","components/AddPetForm/PreviewImage/PreviewImage.jsx","components/AddPetForm/Step3/AddMoreDetailsForm.jsx","components/AddPetForm/Step3/SellMoreDetailsForm.styled.js","components/AddPetForm/Step3/SellMoreDetailsForm.jsx","components/AddPetForm/Step3/MoreDetailsForm.jsx","components/AddPetForm/AddPetForm.jsx","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport bgMobile1x from '../../images/background/bg-mobile@1x.png';\nimport bgMobile2x from '../../images/background/bg-mobile@2x.png';\nimport bgTablet1x from '../../images/background/bg-tablet@1x.png';\nimport bgTablet2x from '../../images/background/bg-tablet@2x.png';\nimport bgDesktop1x from '../../images/background/bg-desktop@1x.png';\nimport bgDesktop2x from '../../images/background/bg-desktop@2x.png';\n\nexport const StyledBackgroundImg = styled.div`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-color: var(--background);\n  background-image: url(${bgMobile1x});\n  background-repeat: no-repeat;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${bgTablet1x});\n  }\n\n  @media screen and (min-width: 768px) and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgTablet2x});\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesktop1x});\n  }\n\n  @media screen and (min-width: 1280px) and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgDesktop2x});\n  }\n`;\n","import { StyledBackgroundImg } from './BackgroundImg.styled';\n\nconst BackgroundImg = ({ children }) => {\n  return <StyledBackgroundImg>{children}</StyledBackgroundImg>;\n};\n\nexport default BackgroundImg;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\ncolor: #111111;\nfont-family: Manrope, sans-serif;\nfont-weight: 700;\nfont-size: 24px;\nline-height: 1.36;\ntext-align: center;\nmargin-top: 40px;\n\n@media screen and (min-width: 768px){\n    font-size: 48px;\n    margin-top: 80px;\n}\n`","import React from 'react';\nimport { Title } from './TitleComponent.styled';\n\nfunction TitleComponent({ name }) {\n  return (\n    <>\n      <Title>{name}</Title>\n    </>\n  );\n}\n\nexport default TitleComponent;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #fef9f9;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  width: ${props => props.width || '280px'};\n  // height: ${props => props.height || '496px'};\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  border-radius: 40px;\n  background: #fff;\n  margin: 0 auto;\n  padding: 20px 8px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: 768px) {\n    width: ${props => props.width || '458px'};\n    // min-height: ${props => props.height || '542px'};\n\n    padding: 20px 32px;\n  }\n`;\n","import React from 'react';\nimport { Card } from './BackgroundCard.styled';\n\nexport default function BackgroundCard({ children, width, height }) {\n  return (\n    <>\n      <Card width={width} height={height}>\n        {children}\n      </Card>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StepsBlockWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 12px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const StepBlock = styled.div`\n  width: 100%;\n`;\n\nexport const StepName = styled.p`\n  color: ${props => props.color || 'var(--gray)'};\n  text-align: start;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: normal;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 27px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const StepLine = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: ${props => props.bg || 'var(--blueLight)'};\n`;\n","import React from 'react';\nimport {\n  StepBlock,\n  StepLine,\n  StepName,\n  StepsBlockWrapper,\n} from './StepsBlock.styled';\n\nconst StepsBlock = ({ step }) => {\n  let firstStepColor = '';\n  let secondStepColor = '';\n  let thirdStepColor = '';\n\n  switch (step) {\n    case 1:\n      firstStepColor = '#54ADFF';\n      break;\n    case 2:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#54ADFF';\n      break;\n    case 3:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#00C3AD';\n      thirdStepColor = '#54ADFF';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <StepsBlockWrapper>\n      <StepBlock>\n        <StepName color={firstStepColor}>Choose option</StepName>\n        <StepLine bg={firstStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={secondStepColor}>Persons details</StepName>\n        <StepLine bg={secondStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={thirdStepColor}>More info</StepName>\n        <StepLine bg={thirdStepColor} />\n      </StepBlock>\n    </StepsBlockWrapper>\n  );\n};\n\nexport default StepsBlock;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  color: var(--red);\n  padding-left: 16px;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from './ErrorComponent.styled';\n\nconst ErrorComponent = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default ErrorComponent;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const Title = styled.h1`\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: normal;\n  margin-bottom: 24px;\n  margin-left: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const FormChooseOption = styled(FormikForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const RadioWrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n\n  @media screen and (min-width: 768px) {\n    gap: 12px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  appearance: none;\n  cursor: pointer;\n  display: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  height: 35px;\n  padding: 8px 16px;\n  border-radius: 40px;\n  background-color: var(--blueLight);\n\n  color: var(--blueLink);\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.56px;\n\n  cursor: pointer;\n\n  &:hover {\n    color: var(--white);\n    background-color: var(--blueLink);\n  }\n\n  ${RadioButton}:checked + & {\n    color: var(--white);\n    background-color: var(--blueLink);\n  }\n`;\n","import styled, { css } from 'styled-components';\n\n// Buttons styles\nexport const ButtonsWrapper = styled.div`\n  // position: absolute;\n  // bottom: 0;\n  // left: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 24px;\n`;\n\nconst sharedStyles = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  height: 38px;\n  padding: 8px 28px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #54adff;\n  font-family: Manrope, sans-serif;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.36;\n  letter-spacing: 0.3px;\n`;\n\nexport const ButtonWhite = styled.button`\n  ${sharedStyles};\n  border: 2px solid transparent;\n  border-radius: 40px;\n`;\n\nexport const BtnIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--blueLink);\n  transition: fill 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ButtonBlue = styled.button`\n  ${sharedStyles};\n  width: 248px;\n  border: 2px solid #54adff;\n  border-radius: 40px;\n  transition: background-image 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(to left, #419ef1, #9bd0ff);\n    color: #fef9f9;\n  }\n\n  &:hover ${BtnIcon}, &:focus ${BtnIcon} {\n    fill: var(--white);\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport BackgroundCard from '../BackgroundCard';\nimport StepsBlock from '../StepsBlock';\nimport ErrorComponent from '../ErrorComponent';\n\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  Title,\n  FormChooseOption,\n  RadioButton,\n  RadioWrapper,\n  Label,\n} from './ChooseOptionForm.styled';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\n\nconst stepOneValidationSchema = Yup.object().shape({\n  category: Yup.string()\n    .required('Choose one of the available categories')\n    .oneOf(['sell', 'lost/found', 'in good hands', 'your pet']),\n});\n\nconst ChooseOptionForm = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  return (\n    <>\n      <BackgroundCard>\n        <Title>Add pet</Title>\n        <StepsBlock step={1} />\n        <Formik\n          validationSchema={stepOneValidationSchema}\n          initialValues={props.data}\n          onSubmit={handleSubmit}\n        >\n          {() => (\n            <FormChooseOption>\n              <RadioWrapper role=\"group\" aria-labelledby=\"category-radio-group\">\n                <Label>\n                  <RadioButton type=\"radio\" name=\"category\" value=\"your pet\" />\n                  your pet\n                </Label>\n\n                <Label>\n                  <RadioButton type=\"radio\" name=\"category\" value=\"sell\" />\n                  sell\n                </Label>\n\n                <Label>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"category\"\n                    value=\"lost/found\"\n                  />\n                  lost/found\n                </Label>\n\n                <Label>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"category\"\n                    value=\"in good hands\"\n                  />\n                  in good hands\n                </Label>\n                <ErrorComponent name=\"category\" />\n              </RadioWrapper>\n\n              <ButtonsWrapper>\n                <ButtonBlue type=\"submit\">\n                  Next\n                  <BtnIcon>\n                    <use href={`${sprite}#icon-pawprint-1`} />\n                  </BtnIcon>\n                </ButtonBlue>\n                <ButtonWhite type=\"button\">\n                  <BtnIcon>\n                    <use href={`${sprite}#icon-arrow-left`} />\n                  </BtnIcon>\n                  Cancel\n                </ButtonWhite>\n              </ButtonsWrapper>\n            </FormChooseOption>\n          )}\n        </Formik>\n      </BackgroundCard>\n    </>\n  );\n};\n\nexport default ChooseOptionForm;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const FormPersonalDetails = styled(FormikForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 20px;\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 4px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const DetailInput = styled(Field)`\n  display: block;\n  width: 264px;\n  padding: 8px 16px;\n  align-items: center;\n\n  border-radius: 40px;\n  border: 1px solid var(--blueLink);\n\n  &::placeholder {\n    color: var(--gray);\n    font-family: Manrope;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 21px;\n    letter-spacing: 0.56px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 394px;\n    padding: 12px 16px;\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: 24px;\n      letter-spacing: 0.64px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const DetailLabel = styled.label`\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 27px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React from 'react';\n\nimport BackgroundCard from '../BackgroundCard';\nimport StepsBlock from '../StepsBlock';\nimport ErrorComponent from '../ErrorComponent';\n\nimport {\n  FormPersonalDetails,\n  FieldsWrapper,\n  DetailWrapper,\n  DetailInput,\n  DetailLabel,\n} from './PersonalDetailsForm.styled';\nimport { Title } from '../Step1/ChooseOptionForm.styled';\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\n\nconst stepTwoValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Enter the pet's name\")\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  birthday: Yup.string()\n    .required('Enter the date in DD-MM-YYYY format')\n    .matches(\n      /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(19|20)\\d\\d$/,\n      'Invalid date format'\n    ),\n\n  type: Yup.string()\n    .required('Enter the type')\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  titleOfAdd: Yup.string()\n    .required('Enter the title of the add')\n    .min(3, 'min 3 symbols')\n    .max(16, 'max 16 symbols'),\n});\n\nconst PersonalDetailsForm = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  return (\n    <BackgroundCard height={props.data.category !== 'your pet' && '559px'}>\n      <Title>Add pet</Title>\n      <StepsBlock step={2} />\n      <Formik\n        validationSchema={stepTwoValidationSchema}\n        initialValues={props.data}\n        onSubmit={handleSubmit}\n      >\n        {({ values }) => (\n          <FormPersonalDetails>\n            <FieldsWrapper>\n              {values.category !== 'your pet' && (\n                <DetailWrapper>\n                  <DetailLabel htmlFor=\"titleOfAdd\"> Title of add</DetailLabel>\n                  <DetailInput\n                    id=\"titleOfAdd\"\n                    name=\"titleOfAdd\"\n                    placeholder=\"Type name pet\"\n                  ></DetailInput>\n                  <ErrorComponent name=\"titleOfAdd\" />\n                </DetailWrapper>\n              )}\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"name\"> Pet's name</DetailLabel>\n                <DetailInput\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Type name pet\"\n                ></DetailInput>\n                <ErrorComponent name=\"name\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"date\"> Date Of Birth</DetailLabel>\n                <DetailInput\n                  id=\"date\"\n                  name=\"birthday\"\n                  placeholder=\"DD-MM-YYYY\"\n                ></DetailInput>\n                <ErrorComponent name=\"date\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"type\"> Type</DetailLabel>\n                <DetailInput\n                  id=\"type\"\n                  name=\"type\"\n                  placeholder=\"Type of pet\"\n                ></DetailInput>\n                <ErrorComponent name=\"type\" />\n              </DetailWrapper>\n            </FieldsWrapper>\n            <ButtonsWrapper>\n              <ButtonBlue type=\"submit\">\n                Next\n                <BtnIcon>\n                  <use href={`${sprite}#icon-pawprint-1`} />\n                </BtnIcon>\n              </ButtonBlue>\n              <ButtonWhite type=\"button\" onClick={() => props.prev(values)}>\n                <BtnIcon>\n                  <use href={`${sprite}#icon-arrow-left`} />\n                </BtnIcon>\n                Back\n              </ButtonWhite>\n            </ButtonsWrapper>\n          </FormPersonalDetails>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default PersonalDetailsForm;\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\n\nexport const FormAddMoreDetails = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 24px;\n`;\nexport const PhotoBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const PhotoLabel = styled.label`\n  display: inline-block;\n  width: 114px;\n  hight: 100%;\n\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 28px;\n`;\n\nexport const ImagePreview = styled.div`\n  position: relative;\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  overflow: hidden;\n`;\nexport const DefaultImage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--blueLight);\n`;\nexport const PhotoInput = styled.input`\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n`;\nexport const UploadIcon = styled.svg`\n  width: 48px;\n  height: 48px;\n  stroke-width: 2px;\n  fill: #111;\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n`;\nexport const CommentsInput = styled.textarea`\n  display: block;\n  text-align: start;\n  overflow-wrap: break-word;\n  width: 394px;\n  min-height: 79px;\n  padding: 12px 16px;\n\n  border-radius: 20px;\n  border: 1px solid var(--blueLink);\n`;\nexport const CommentsLabel = styled.label`\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 26.5px;\n`;\n","import React, { useState } from 'react';\n\nconst PreviewImage = ({ file }) => {\n  const [preview, setPreview] = useState(null);\n\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n\n  return (\n    <div>\n      <img src={preview} alt=\"Preview\" />\n    </div>\n  );\n};\n\nexport default PreviewImage;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useRef } from 'react';\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  FormAddMoreDetails,\n  DetailWrapper,\n  PhotoBlock,\n  PhotoLabel,\n  ImagePreview,\n  DefaultImage,\n  UploadIcon,\n  PhotoInput,\n  CommentsInput,\n  CommentsLabel,\n} from './AddMoreDetails.styled';\nimport BackgroundCard from '../BackgroundCard';\nimport TitleComponent from '../../TitleComponent/TitleComponent';\nimport StepsBlock from '../StepsBlock';\nimport {\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\nimport PreviewImage from '../PreviewImage/PreviewImage';\n\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpeg', 'image/jpg'];\n\nconst stepThreeValidationSchema = Yup.object().shape({\n  file: Yup.mixed()\n    .nullable()\n    .required('Select a file')\n    .test(\n      'FILE_SIZE',\n      'Uploaded file must be 3MB or less',\n      value => !value || (value && value.size <= 3145728)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file has unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst AddMoreDetailsForm = ({ next, prev, data }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n  const fileRef = useRef(null);\n\n  return (\n    <BackgroundCard>\n      <TitleComponent name=\"Add pet\" />\n      <StepsBlock step={3} />\n      <Formik\n        validationSchema={stepThreeValidationSchema}\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormAddMoreDetails>\n            <PhotoBlock>\n              <PhotoLabel htmlFor=\"file\">Load the pet’s image:</PhotoLabel>\n\n              <ImagePreview>\n                <PhotoInput\n                  ref={fileRef}\n                  hidden\n                  type=\"file\"\n                  id=\"file\"\n                  name=\"file\"\n                  onChange={event => {\n                    setFieldValue('file', event.target.files[0]);\n                  }}\n                />\n                {values.file !== null ? (\n                  <PreviewImage file={values.file} />\n                ) : (\n                  <DefaultImage>\n                    <UploadIcon>\n                      <use href={`${sprite}#icon-plus`} />\n                    </UploadIcon>\n                  </DefaultImage>\n                )}\n              </ImagePreview>\n              <ErrorMessage name=\"file\" />\n            </PhotoBlock>\n\n            <DetailWrapper>\n              <CommentsLabel htmlFor=\"comments\"> Comments</CommentsLabel>\n              <CommentsInput\n                id=\"comments\"\n                name=\"comments\"\n                placeholder=\"Enter your comment\"\n              ></CommentsInput>\n              <ErrorMessage name=\"comments\" />\n            </DetailWrapper>\n\n            <ButtonWhite type=\"button\" onClick={() => prev(values)}>\n              <BtnIcon>\n                <use href={`${sprite}#icon-arrow-left`} />\n              </BtnIcon>\n              Back\n            </ButtonWhite>\n            <ButtonBlue type=\"submit\">\n              Done\n              <BtnIcon>\n                <use href={`${sprite}#icon-pawprint-1`} />\n              </BtnIcon>\n            </ButtonBlue>\n          </FormAddMoreDetails>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default AddMoreDetailsForm;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const FormSellMoreDetails = styled(FormikForm)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 24px;\n`;\n\nexport const BlocksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SexPhotoblock = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  gap: 48px;\n`;\nexport const Sexblock = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const SexList = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n\nexport const RadioButton = styled(Field)`\n  appearance: none;\n  cursor: pointer;\n  // display: none;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  height: 35px;\n  padding: 8px 16px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  flex-shrink: 0;\n\n  border-radius: 40px;\n  background-color: transparent;\n\n  color: var(--gray);\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: 0.64px;\n\n  cursor: pointer;\n\n  &:hover {\n    color: var(--white);\n    background-color: var(--blueLink);\n  }\n\n  ${RadioButton}:checked + & {\n    color: var(--white);\n    background-color: var(--blueLink);\n  }\n`;\n\nexport const SexBtn = styled(Field)`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n\n  color: #888;\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%; /* 24px */\n  letter-spacing: 0.64px;\n`;\nexport const IconSex = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--gray);\n  transition: fill 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\n//Photoblock\nexport const PhotoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const PhotoLabel = styled.label`\n  display: inline-block;\n  width: 114px;\n  hight: 100%;\n\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 28px;\n`;\nexport const ImagePreview = styled.div`\n  position: relative;\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  overflow: hidden;\n`;\nexport const DefaultImage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--blueLight);\n`;\nexport const PhotoInput = styled.input`\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n`;\nexport const UploadIcon = styled.svg`\n  width: 48px;\n  height: 48px;\n  stroke-width: 2px;\n  fill: #111;\n`;\n\n//LocationPriceblock\nexport const LocationPriceBlock = styled.div`\n  display: flex;\n  flex-grow: 2;\n  flex-direction: column;\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n`;\n\nexport const DetailLabel = styled.label`\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 26.5px;\n`;\n\nexport const DetailInput = styled.input`\n  display: flex;\n  padding: 12px 16px;\n\n  border-radius: 40px;\n  border: 1px solid #54adff;\n`;\n\nexport const CommentsInput = styled.textarea`\n  display: block;\n  text-align: start;\n  overflow-wrap: break-word;\n  min-height: 79px;\n  padding: 12px 16px;\n\n  border-radius: 20px;\n  border: 1px solid var(--blueLink);\n`;\nexport const CommentsLabel = styled.label`\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 26.5px;\n`;\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useRef } from 'react';\n\nimport BackgroundCard from '../BackgroundCard';\nimport PreviewImage from '../PreviewImage/PreviewImage';\nimport StepsBlock from '../StepsBlock';\n\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  FormSellMoreDetails,\n  BlocksWrapper,\n  SexPhotoblock,\n  Sexblock,\n  SexList,\n  RadioButton,\n  IconSex,\n  PhotoBlock,\n  ImagePreview,\n  DefaultImage,\n  PhotoInput,\n  PhotoLabel,\n  UploadIcon,\n  LocationPriceBlock,\n  DetailWrapper,\n  CommentsLabel,\n  CommentsInput,\n  Label,\n} from './SellMoreDetailsForm.styled';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\nimport { Title } from '../Step1/ChooseOptionForm.styled';\n\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpeg', 'image/jpg'];\n\nconst stepThreeValidationSchema = Yup.object().shape({\n  file: Yup.mixed()\n    .nullable()\n    .required('Select a file')\n    .test(\n      'FILE_SIZE',\n      'Uploaded file must be 3MB or less',\n      value => !value || (value && value.size <= 3145728)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file has unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n\n  sex: Yup.string().required('Select gender').oneOf(['male', 'female']),\n\n  location: Yup.string().required('Enter location'),\n\n  price: Yup.number()\n    .required('Enter price')\n    .min(1, 'The price must be greater than 0'),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst SellMoreDetailsForm = ({ next, prev, data }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n  const fileRef = useRef(null);\n\n  return (\n    <BackgroundCard>\n      <Title>Add pet</Title>\n      <StepsBlock step={3} />\n      <Formik\n        validationSchema={stepThreeValidationSchema}\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormSellMoreDetails>\n            <BlocksWrapper>\n              <SexPhotoblock>\n                <Sexblock role=\"group\" aria-labelledby=\"gender-radio-group\">\n                  <h3>The Sex</h3>\n                  <SexList>\n                    <Label>\n                      <IconSex>\n                        <use href={`${sprite}#icon-female`} />\n                      </IconSex>\n                      <RadioButton type=\"radio\" name=\"sex\" value=\"female\" />\n                      Female\n                    </Label>\n\n                    <Label>\n                      <IconSex>\n                        <use href={`${sprite}#icon-male`} />\n                      </IconSex>\n                      <RadioButton type=\"radio\" name=\"sex\" value=\"male\" />\n                      Male\n                    </Label>\n                  </SexList>\n\n                  <ErrorMessage name=\"sex\" />\n                </Sexblock>\n\n                <PhotoBlock>\n                  <PhotoLabel htmlFor=\"file\">Load the pet’s image:</PhotoLabel>\n\n                  <ImagePreview>\n                    <PhotoInput\n                      ref={fileRef}\n                      hidden\n                      type=\"file\"\n                      id=\"file\"\n                      name=\"file\"\n                      onChange={event => {\n                        setFieldValue('file', event.target.files[0]);\n                      }}\n                    />\n                    {values.file !== null ? (\n                      <PreviewImage file={values.file} />\n                    ) : (\n                      <DefaultImage>\n                        <UploadIcon>\n                          <use href={`${sprite}#icon-plus`} />\n                        </UploadIcon>\n                      </DefaultImage>\n                    )}\n                  </ImagePreview>\n                  <ErrorMessage name=\"file\" />\n                </PhotoBlock>\n              </SexPhotoblock>\n\n              <LocationPriceBlock>\n                <DetailWrapper>\n                  <label htmlFor=\"location\"> Location</label>\n                  <Field\n                    id=\"location\"\n                    name=\"location\"\n                    placeholder=\"Kyiv\"\n                  ></Field>\n                  <ErrorMessage name=\"location\" />\n                </DetailWrapper>\n\n                {values.category === 'sell' && (\n                  <DetailWrapper>\n                    <label htmlFor=\"price\"> Price</label>\n                    <Field\n                      id=\"price\"\n                      name=\"price\"\n                      placeholder=\"000 USD\"\n                    ></Field>\n                    <ErrorMessage name=\"price\" />\n                  </DetailWrapper>\n                )}\n\n                <DetailWrapper>\n                  <CommentsLabel htmlFor=\"comments\"> Comments</CommentsLabel>\n                  <CommentsInput\n                    id=\"comments\"\n                    name=\"comments\"\n                    placeholder=\"Enter your comment\"\n                  ></CommentsInput>\n                  <ErrorMessage name=\"comments\" />\n                </DetailWrapper>\n              </LocationPriceBlock>\n            </BlocksWrapper>\n\n            <ButtonsWrapper>\n              <ButtonBlue type=\"submit\">\n                Done\n                <BtnIcon>\n                  <use href={`${sprite}#icon-pawprint-1`} />\n                </BtnIcon>\n              </ButtonBlue>\n              <ButtonWhite type=\"button\" onClick={() => prev(values)}>\n                <BtnIcon>\n                  <use href={`${sprite}#icon-arrow-left`} />\n                </BtnIcon>\n                Back\n              </ButtonWhite>\n            </ButtonsWrapper>\n          </FormSellMoreDetails>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default SellMoreDetailsForm;\n\n// const SellMoreDetailsForm = ({ formData, handleChange, handleSubmit }) => {\n//   return (\n//     <>\n//       <FormSellMoreDetails onSubmit={handleSubmit}>\n//         <SexPhotoblock className=\"sexPhotoblock\">\n//           <Sexblock className=\"sexblock\">\n//             <h3>The Sex</h3>\n//             <SexList>\n//               <SexBtn\n//                 type=\"button\"\n//                 name=\"sex\"\n//                 value=\"female\"\n//                 onClick={handleChange}\n//               >\n//                 <IconSex>\n//                   <use href={`${sprite}#icon-female`} />\n//                 </IconSex>\n//                 Female\n//               </SexBtn>\n//               <SexBtn\n//                 type=\"button\"\n//                 name=\"sex\"\n//                 value=\"male\"\n//                 onClick={handleChange}\n//               >\n//                 <IconSex>\n//                   <use href={`${sprite}#icon-male`} />\n//                 </IconSex>\n//                 Male\n//               </SexBtn>\n//             </SexList>\n//           </Sexblock>\n//           <PhotoBlock>\n//             <PhotoLabel htmlFor=\"upload\">Load the pet's image</PhotoLabel>\n\n//             <ImagePreview id=\"default-svg-preview\">\n//               <PhotoInput\n//                 type=\"file\"\n//                 accept=\".JPG, .PNG\"\n//                 id=\"upload\"\n//                 // onChange={handleFileUpload}\n//               />\n//               <UploadIcon>\n//                 <use href={`${sprite}#icon-plus`} />\n//               </UploadIcon>\n//             </ImagePreview>\n//           </PhotoBlock>\n//         </SexPhotoblock>\n//         <LocationPriceBlock className=\"locationPriceBlock\">\n//           <DetailWrapper>\n//             <DetailLabel htmlFor=\"location\">Location</DetailLabel>\n//             <DetailInput\n//               type=\"text\"\n//               name=\"location\"\n//               value={formData.location}\n//               onChange={handleChange}\n//               placeholder=\"Kyiv\"\n//             />\n//           </DetailWrapper>\n//           {formData.category !== 'in good hands' && (\n//             <DetailWrapper>\n//               <DetailLabel htmlFor=\"price\">Price</DetailLabel>\n//               <DetailInput\n//                 type=\"text\"\n//                 name=\"price\"\n//                 value={formData.price}\n//                 onChange={handleChange}\n//                 placeholder=\"000 USD\"\n//               />\n//             </DetailWrapper>\n//           )}\n//           <DetailWrapper>\n//             <CommentsLabel htmlFor=\"comments\">Comments</CommentsLabel>\n//             <CommentsInput\n//               type=\"text\"\n//               name=\"comments\"\n//               value={formData.comments}\n//               onChange={handleChange}\n//               placeholder=\"Enter your comment\"\n//             />\n//           </DetailWrapper>\n//         </LocationPriceBlock>\n//       </FormSellMoreDetails>\n//     </>\n//   );\n// };\n\n// export default SellMoreDetailsForm;\n","import React from 'react';\n\nimport AddMoreDetailsForm from './AddMoreDetailsForm';\nimport SellMoreDetailsForm from './SellMoreDetailsForm';\n\nconst MoreDetailsForm = ({ next, prev, data }) => {\n  console.log('MoredetailsForm data', data.category);\n\n  if (data.category === 'your pet') {\n    return <AddMoreDetailsForm next={next} prev={prev} data={data} />;\n  } else {\n    return <SellMoreDetailsForm next={next} prev={prev} data={data} />;\n  }\n};\n\nexport default MoreDetailsForm;\n","import React, { useState } from 'react';\n\nimport BackgroundImg from '../BackgroundImg/BackgroundImg';\n\nimport ChooseOptionForm from './Step1/ChooseOptionForm';\nimport PersonalDetailsForm from './Step2/PersonalDetailsForm';\nimport MoreDetailsForm from './Step3/MoreDetailsForm';\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://yourpets-project-backend.onrender.com';\n\nfunction AddPetForm() {\n  const initialFormData = {\n    category: '',\n    name: '',\n    birthday: '',\n    type: '',\n    titleOfAdd: '',\n    file: null,\n    comments: '',\n    location: '',\n    price: '',\n    sex: '',\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = async formData => {\n    let url;\n\n    try {\n      if (formData.category === 'your pet') {\n        url = '/pets';\n      } else {\n        url = '/notices';\n      }\n\n      const response = await axios.post(url, formData);\n      console.log('Response from server:', response.data);\n\n      if (formData.category === 'your pet') {\n      } else {\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n    }\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setFormData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      // setFormData(initialFormData);\n      // setCurrentStep(0);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handleBackStep = newData => {\n    setFormData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n  const steps = [\n    <ChooseOptionForm next={handleNextStep} data={formData} />,\n    <PersonalDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n    <MoreDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n  ];\n\n  console.log('data:', formData);\n\n  return <BackgroundImg>{steps[currentStep]}</BackgroundImg>;\n}\n\nexport default AddPetForm;\n","import React from 'react';\nimport { Wrapper } from './AddPetPage.styled';\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <Wrapper>\n      <AddPetForm />\n    </Wrapper>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["StyledBackgroundImg","styled","bgMobile1x","bgMobile2x","bgTablet1x","bgTablet2x","bgDesktop1x","bgDesktop2x","children","Title","name","Wrapper","Card","props","width","height","BackgroundCard","StepsBlockWrapper","StepBlock","StepName","color","StepLine","bg","firstStepColor","secondStepColor","thirdStepColor","step","ErrorText","render","message","FormChooseOption","FormikForm","RadioWrapper","RadioButton","Field","Label","ButtonsWrapper","sharedStyles","css","ButtonWhite","BtnIcon","ButtonBlue","stepOneValidationSchema","Yup","shape","category","required","oneOf","validationSchema","initialValues","data","onSubmit","values","next","role","type","value","href","sprite","FormPersonalDetails","FieldsWrapper","DetailWrapper","DetailInput","DetailLabel","stepTwoValidationSchema","min","max","birthday","matches","titleOfAdd","htmlFor","id","placeholder","onClick","prev","FormAddMoreDetails","PhotoBlock","PhotoLabel","ImagePreview","DefaultImage","PhotoInput","UploadIcon","CommentsInput","CommentsLabel","file","useState","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","src","alt","SUPPORTED_FORMATS","stepThreeValidationSchema","nullable","test","size","includes","comments","fileRef","useRef","TitleComponent","setFieldValue","ref","hidden","onChange","event","target","files","FormSellMoreDetails","BlocksWrapper","SexPhotoblock","Sexblock","SexList","IconSex","LocationPriceBlock","sex","location","price","console","log","axios","formData","setFormData","currentStep","setCurrentStep","makeRequest","url","response","error","handleNextStep","newData","final","handleBackStep","steps","BackgroundImg"],"sourceRoot":""}