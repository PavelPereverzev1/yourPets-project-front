{"version":3,"file":"static/js/487.f7852e26.chunk.js","mappings":"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","sources":["components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.jsx","services/myPetsAPI.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.jsx","components/PetsData/PetsData.styled.js","hooks/useResize.js","components/AddPetButton/AddPetButton.styled.js","components/AddPetButton/AddPetButton.jsx","components/PetsData/PetsData.jsx","components/ButtonComponent/ButtonComponent.jsx","components/UserForm/LogoutUserCardBtn/LogoutUserCardBtn.styled.js","components/UserForm/LogoutUserCardBtn/LogoutUserCardBtn.jsx","components/UserForm/ValidationError.jsx","components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.js","helpers/validateUserSchema.js","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  width: 51.3125rem;\n  padding: 1.25rem;\n  gap: 2rem;\n\n  border-radius: 2.5rem;\n  background: var(--white);\n\n  /* Shadow default */\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n`;\n\nexport const Image = styled.img`\n  width: 10.0625rem;\n  height: 10.0625rem;\n  border-radius: 2.5rem;\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n`;\n\nexport const Text = styled.p`\n  font-size: 1rem;\n  line-height: 1.375rem;\n  letter-spacing: 0.04rem;\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 600;\n  line-height: normal;\n`;\n","import React from 'react';\nimport { Card, DataWrapper, Image, Text, TextTitle } from './PetsItem.styled';\n\nconst PetsItem = ({ pet }) => {\n  const { image, type, name, datebirth, comments } = pet;\n  return (\n    <Card>\n      <Image\n        src={image}\n        alt={type}\n        width=\"10.0625rem\"\n        height=\"10.0625rem\"\n        loading=\"lazy\"\n      />\n      <DataWrapper>\n        <Text>\n          <TextTitle>Name: </TextTitle>\n          {name}\n        </Text>\n        <Text>\n          <TextTitle>Date of birth: </TextTitle>\n          {datebirth}\n        </Text>\n        <Text>\n          <TextTitle>Type: </TextTitle>\n          {type}\n        </Text>\n        <Text>\n          <TextTitle>Comments: </TextTitle>\n          {comments}\n        </Text>\n      </DataWrapper>\n    </Card>\n  );\n};\n\nexport default PetsItem;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://64fde15b596493f7af7eb5ee.mockapi.io/';\n\nexport const fethMyPetsAPI = async url => {\n  try {\n    const responce = await axios.get(`${BASE_URL}${url}`);\n    return responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nexport const ListItem = styled.li``;\n","import PetsItem from 'components/PetsItem/PetsItem';\nimport { useEffect, useState } from 'react';\nimport { fethMyPetsAPI } from 'services/myPetsAPI';\nimport { List, ListItem } from './PetsList.styled';\n\nconst PetsList = () => {\n  const [myPets, setMyPets] = useState([]);\n\n  const getMyPets = async () => {\n    const data = await fethMyPetsAPI('/myPets');\n    setMyPets(data);\n  };\n\n  useEffect(() => {\n    getMyPets();\n  }, []);\n\n  return (\n    <List>\n      {myPets.map(pet => {\n        return (\n          <ListItem key={pet.id}>\n            <PetsItem pet={pet} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default PetsList;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.75rem;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n","import { useState, useEffect } from 'react';\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return [windowSize.width, windowSize.height];\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { BsPlus, BsPlusLg } from 'react-icons/bs';\n\nexport const Button = styled(Link)`\n  width: 80px;\n  height: 80px;\n  border-radius: 40px;\n  border: none;\n  padding: 20px 17px;\n  gap: 4px;\n  font-weight: 600;\n  font-size: 12px;\n\n  text-decoration: none;\n  color: var(--white);\n  background-color: var(--blueLink);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  box-shadow: 3px 8px 14px 0px #88c6fd19;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: var(--blueGradient);\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    width: 129px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 700;\n    padding: 8px 18px;\n    border-radius: 40px;\n    gap: 8px;\n  }\n`;\nexport const PlusIconSmall = styled(BsPlus)`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const PlusIconLarge = styled(BsPlusLg)`\n  width: 24px;\n  height: 24px;\n`;\n","import { useWindowSize } from 'hooks/useResize';\nimport { Button, PlusIconLarge, PlusIconSmall } from './AddPetButton.styled';\n\nconst AddPetButton = ({ path }) => {\n  const [screenWidth] = useWindowSize();\n\n  return (\n    <Button to={path}>\n      {screenWidth < 768 && <PlusIconLarge />}\n      <span>Add Pet</span>\n      {screenWidth >= 768 && <PlusIconSmall />}\n    </Button>\n  );\n};\n\nexport default AddPetButton;\n","import PetsList from 'components/PetsList/PetsList';\nimport { Section, Title } from './PetsData.styled';\nimport AddPetButton from 'components/AddPetButton/AddPetButton';\n\nconst PetsData = () => {\n  return (\n    <Section>\n      <Title>My pets:</Title>\n      <AddPetButton path=\"/add-pet\" />\n      <PetsList />\n    </Section>\n  );\n};\n\nexport default PetsData;\n","import React from 'react';\nimport { Button, FilledButton, RoundButton } from './ButtonComponent.styled';\n\nexport default function ButtonComponent(props) {\n  switch (props.$variant) {\n    case 'filled':\n      return <FilledButton {...props}>{props.children}</FilledButton>;\n\n    case 'round':\n      return <RoundButton {...props}>{props.children}</RoundButton>;\n\n    default:\n      return <Button {...props}>{props.children}</Button>;\n  }\n}\n","import { styled } from 'styled-components';\n\nexport const Btn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  letter-spacing: 0.64px;\n  color: var(--gray);\n  background: none;\n  border: none;\n  margin-right: auto;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/AuthSlice/operations';\nimport { Btn, Icon } from './LogoutUserCardBtn.styled';\nimport sprite from 'images/icons/sprite.svg';\nimport LogOutModal from 'components/Modals/LogOutModal/LogOutModal';\n\nconst LogoutUserCardBtn = () => {\n  const [modalActive, setModalActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      <Btn onClick={() => setModalActive(true)}>\n        <Icon>\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        Log out\n      </Btn>\n      <LogOutModal\n        active={modalActive}\n        setActive={setModalActive}\n        yes={handleLogout}\n      />\n    </>\n  );\n};\n\nexport default LogoutUserCardBtn;\n","import { styled } from 'styled-components';\n\nconst ErrorMessage = styled.p`\n  position: absolute;\n  bottom: -12px;\n  left: 80px;\n  font-size: 10px;\n  line-height: normal;\n  letter-spacing: 0.48px;\n  color: #f43f5da6;\n\n  @media screen and (min-width: 768px) {\n    bottom: -11px;\n    left: 110px;\n  }\n`;\n\nconst ValidationError = ({ touched, error }) => {\n  return touched && error ? <ErrorMessage>{error}</ErrorMessage> : null;\n};\n\nexport default ValidationError;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 355px;\n    align-items: end;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n  padding: 22px 0 21px 0;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    padding: 0 0 16px 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 0 10px 0;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.56px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    letter-spacing: 0.72px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 190px;\n  padding: 4px 12px;\n  align-items: center;\n  gap: 191px;\n  border-radius: 20px;\n  border: 1px solid ${props => (props.$isValid ? 'var(--blueLink)' : 'red')};\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: 0.48px;\n\n  @media screen and (min-width: 768px) {\n    width: 255px;\n    font-size: 16px;\n    letter-spacing: 0.64px;\n  }\n`;\n","import ButtonComponent from 'components/ButtonComponent/ButtonComponent';\nimport LogoutUserCardBtn from './LogoutUserCardBtn/LogoutUserCardBtn';\nimport { useWindowSize } from 'hooks/useResize';\nimport ValidationError from './ValidationError';\nimport {\n  Form,\n  Input,\n  InputContainer,\n  InputWrapper,\n  Label,\n} from './UserForm.styled';\n\nconst UserForm = ({ isEditFormInactive, formik }) => {\n  const [screenWidth] = useWindowSize();\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <InputContainer>\n        <InputWrapper>\n          <Label htmlFor=\"name\">Name:</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.name}\n          />\n          <ValidationError\n            touched={formik.touched.name}\n            error={formik.errors.name}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"email\">Email:</Label>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.email}\n          />\n          <ValidationError\n            touched={formik.touched.email}\n            error={formik.errors.email}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"birthday\">Birthday:</Label>\n          <Input\n            type=\"date\"\n            id=\"birthday\"\n            name=\"birthday\"\n            onChange={formik.handleChange}\n            value={formik.values.birthday}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.birthday}\n          />\n          <ValidationError\n            touched={formik.touched.birthday}\n            error={formik.errors.birthday}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"phone\">Phone:</Label>\n          <Input\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            onChange={formik.handleChange}\n            value={formik.values.phone}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.phone}\n          />\n          <ValidationError\n            touched={formik.touched.phone}\n            error={formik.errors.phone}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"city\">City:</Label>\n          <Input\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={formik.handleChange}\n            value={formik.values.city}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.city}\n          />\n          <ValidationError\n            touched={formik.touched.city}\n            error={formik.errors.city}\n          />\n        </InputWrapper>\n      </InputContainer>\n\n      {!isEditFormInactive ? (\n        <ButtonComponent\n          type=\"submit\"\n          height=\"31px\"\n          width={screenWidth >= 768 ? '255px' : '248px'}\n          disabled={!formik.isValid}\n          $variant=\"filled\"\n        >\n          Save\n        </ButtonComponent>\n      ) : (\n        <LogoutUserCardBtn />\n      )}\n    </Form>\n  );\n};\n\nexport default UserForm;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  padding: 20px 8px 25px 8px;\n  border-radius: 20px;\n  background: var(--white);\n  box-shadow: var(--boxShadowDefault);\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n    gap: 71px;\n    padding: 20px 20px 16px 20px;\n    min-height: 270px;\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 0;\n    width: 395px;\n    height: 520px;\n  }\n`;\n\nexport const CardBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background: none;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    top: 18px;\n    right: 18px;\n  }\n`;\n\nexport const EditIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--blueLink);\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n`;\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n  height: 224px;\n`;\n\nexport const Thumb = styled.div`\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  overflow: hidden;\n`;\n\nexport const Avatar = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const UploadBtn = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: 0.48px;\n  cursor: pointer;\n`;\n\nexport const UploadInput = styled.input`\n  display: none;\n`;\n\nexport const CameraIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ConfirmBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: 0.48px;\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const ConfirmIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n`;\n\nexport const RemoveBtn = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const RemoveIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--red);\n`;\n","import * as Yup from 'yup';\n\nconst emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegExp = /^\\+380\\d{9}$/;\nconst dateRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n\nexport const validateUserSchema = Yup.object({\n  name: Yup.string()\n    .required('Please enter your name.')\n    .min(2, 'Name too short.')\n    .max(16, 'Name too long.'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Invalid email format.')\n    .required('Email is required'),\n  birthday: Yup.string().matches(dateRegExp, 'Please use YYYY-MM-DD format.'),\n  phone: Yup.string().matches(phoneRegExp, 'Please use +380XXXXXXXXX format.'),\n  city: Yup.string(),\n});\n","import UserForm from 'components/UserForm/UserForm';\nimport sprite from 'images/icons/sprite.svg';\nimport {\n  CardBtn,\n  Card,\n  Section,\n  Title,\n  AvatarContainer,\n  Avatar,\n  UploadBtn,\n  UploadInput,\n  EditIcon,\n  CloseIcon,\n  Thumb,\n  CameraIcon,\n  ConfirmBtn,\n  BtnWrapper,\n  RemoveBtn,\n  RemoveIcon,\n} from './UserData.styled';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsUserDataLoaded, selectUser } from 'redux/AuthSlice';\nimport { refreshUser, updateUser } from 'redux/AuthSlice/operations';\nimport { validateUserSchema } from 'helpers/validateUserSchema';\n\nconst UserData = () => {\n  const [isEditFormInactive, setIsEditFormInactive] = useState(true);\n  const [uploadAvatarURL, setUploadAvatarURL] = useState(null);\n  const [uploadedAvatar, setUploadedAvatar] = useState(false);\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!selectIsUserDataLoaded) {\n      dispatch(refreshUser());\n    }\n  }, [dispatch]);\n\n  const fileInputRef = useRef();\n  const formik = useFormik({\n    initialValues: {\n      name: user.name,\n      email: user.email,\n      birthday: user.birthday,\n      phone: user.phone,\n      city: user.city,\n    },\n    validationSchema: validateUserSchema,\n    onSubmit: async values => {\n      const formData = new FormData();\n\n      for (const key in values) {\n        formData.append(key, values[key]);\n      }\n\n      if (fileInputRef.current.files[0]) {\n        const file = fileInputRef.current.files[0];\n        formData.append('avatar', file);\n        fileInputRef.current.value = null;\n      }\n\n      const res = await dispatch(updateUser(formData));\n\n      if (updateUser.fulfilled.match(res)) {\n        setIsEditFormInactive(true);\n        return;\n      }\n      alert('database error, please try again later');\n    },\n  });\n\n  const handleAvatarConfirm = e => {\n    e.preventDefault();\n    setUploadedAvatar(false);\n  };\n\n  const handleAvatarChange = e => {\n    const file = e.currentTarget.files[0];\n\n    if (file) {\n      const newAvatarUrl = URL.createObjectURL(file);\n      setUploadAvatarURL(newAvatarUrl);\n      setUploadedAvatar(true);\n    }\n  };\n\n  const handleAvatarRemove = () => {\n    setUploadAvatarURL(null);\n    setUploadedAvatar(false);\n    fileInputRef.current.value = null;\n  };\n\n  return (\n    <Section>\n      <Title>My information:</Title>\n      <Card>\n        <CardBtn onClick={() => setIsEditFormInactive(!isEditFormInactive)}>\n          {isEditFormInactive ? (\n            <EditIcon>\n              <use href={`${sprite}#icon-edit-2`} />\n            </EditIcon>\n          ) : (\n            <CloseIcon>\n              <use href={`${sprite}#icon-cross-small`} />\n            </CloseIcon>\n          )}\n        </CardBtn>\n        <AvatarContainer>\n          <Thumb>\n            <Avatar\n              src={uploadAvatarURL ?? user.avatarURL}\n              alt=\"User avatar\"\n              loading=\"lazy\"\n            />\n          </Thumb>\n          {!isEditFormInactive && (\n            <form onSubmit={handleAvatarConfirm}>\n              <UploadInput\n                id=\"file-upload\"\n                type=\"file\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                onChange={handleAvatarChange}\n                ref={fileInputRef}\n              />\n              {uploadedAvatar ? (\n                <BtnWrapper>\n                  <ConfirmBtn type=\"submit\">\n                    <CameraIcon>\n                      <use href={`${sprite}#icon-check`} />\n                    </CameraIcon>\n                    Confirm\n                  </ConfirmBtn>\n                  <RemoveBtn type=\"button\" onClick={handleAvatarRemove}>\n                    <RemoveIcon>\n                      <use href={`${sprite}#icon-cross-small`} />\n                    </RemoveIcon>\n                  </RemoveBtn>\n                </BtnWrapper>\n              ) : (\n                <UploadBtn htmlFor=\"file-upload\">\n                  <CameraIcon>\n                    <use href={`${sprite}#icon-camera`} />\n                  </CameraIcon>\n                  Edit Photo\n                </UploadBtn>\n              )}\n            </form>\n          )}\n        </AvatarContainer>\n        <UserForm isEditFormInactive={isEditFormInactive} formik={formik} />\n      </Card>\n    </Section>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 46px;\n  padding-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding-top: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n","import PetsData from 'components/PetsData/PetsData';\nimport UserData from 'components/UserData/UserData';\nimport { Wrapper } from './UserPage.styled';\n\nconst UserPage = () => {\n  return (\n    <Wrapper>\n      <UserData />\n      <PetsData />\n    </Wrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["Card","styled","Image","DataWrapper","Text","TextTitle","pet","image","type","name","datebirth","comments","src","alt","width","height","loading","fethMyPetsAPI","url","axios","responce","data","console","log","List","ListItem","useState","myPets","setMyPets","getMyPets","useEffect","map","id","Section","Title","useWindowSize","window","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","Button","Link","PlusIconSmall","BsPlus","PlusIconLarge","BsPlusLg","path","screenWidth","to","ButtonComponent","props","$variant","children","Btn","Icon","modalActive","setModalActive","dispatch","useDispatch","onClick","href","sprite","LogOutModal","active","setActive","yes","logOut","ErrorMessage","touched","error","Form","InputContainer","InputWrapper","Label","Input","$isValid","isEditFormInactive","formik","onSubmit","handleSubmit","htmlFor","onChange","handleChange","value","values","disabled","onBlur","handleBlur","errors","email","birthday","phone","city","isValid","CardBtn","EditIcon","CloseIcon","AvatarContainer","Thumb","Avatar","UploadBtn","UploadInput","CameraIcon","BtnWrapper","ConfirmBtn","RemoveBtn","RemoveIcon","validateUserSchema","Yup","required","min","max","matches","setIsEditFormInactive","uploadAvatarURL","setUploadAvatarURL","uploadedAvatar","setUploadedAvatar","user","useSelector","selectUser","selectIsUserDataLoaded","refreshUser","fileInputRef","useRef","useFormik","initialValues","validationSchema","key","formData","FormData","append","current","files","file","updateUser","res","alert","avatarURL","e","preventDefault","accept","currentTarget","newAvatarUrl","URL","createObjectURL","ref","Wrapper"],"sourceRoot":""}