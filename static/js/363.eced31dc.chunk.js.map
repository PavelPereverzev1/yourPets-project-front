{"version":3,"file":"static/js/363.eced31dc.chunk.js","mappings":"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","sources":["components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.jsx","services/myPetsAPI.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.jsx","components/PetsData/PetsData.styled.js","components/ButtonComponent/ButtonComponent.jsx","hooks/useResize.js","components/PetsData/PetsData.jsx","components/UserForm/LogoutUserCardBtn/LogoutUserCardBtn.styled.js","components/UserForm/LogoutUserCardBtn/LogoutUserCardBtn.jsx","components/UserForm/ValidationError.jsx","components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.js","helpers/validateUserSchema.js","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 16px 20px 20px 20px;\n  gap: 2rem;\n\n  border-radius: 2.5rem;\n  background: var(--white);\n\n  /* Shadow default */\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n`;\n\nexport const Image = styled.img`\n  width: 10.0625rem;\n  height: 10.0625rem;\n  border-radius: 2.5rem;\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n`;\n\nexport const Text = styled.p`\n  font-size: 1rem;\n  line-height: 1.375rem;\n  letter-spacing: 0.04rem;\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 600;\n  line-height: normal;\n`;\n","import { Card, DataWrapper, Image, Text, TextTitle } from './PetsItem.styled';\n\nconst PetsItem = ({ pet }) => {\n  const { name, birthday, type, comments, photoURL } = pet;\n  return (\n    <Card>\n      <Image\n        src={photoURL}\n        alt={type}\n        width=\"10.0625rem\"\n        height=\"10.0625rem\"\n        loading=\"lazy\"\n      />\n      <DataWrapper>\n        <Text>\n          <TextTitle>Name: </TextTitle>\n          {name}\n        </Text>\n        <Text>\n          <TextTitle>Date of birth: </TextTitle>\n          {birthday}\n        </Text>\n        <Text>\n          <TextTitle>Type: </TextTitle>\n          {type}\n        </Text>\n        <Text>\n          <TextTitle>Comments: </TextTitle>\n          {comments}\n        </Text>\n      </DataWrapper>\n    </Card>\n  );\n};\n\nexport default PetsItem;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://64fde15b596493f7af7eb5ee.mockapi.io/';\n\nexport const fethMyPetsAPI = async url => {\n  try {\n    const res = await axios.get('/pets');\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nexport const ListItem = styled.li``;\n","import PetsItem from 'components/PetsItem/PetsItem';\nimport { useEffect, useState } from 'react';\nimport { fethMyPetsAPI } from 'services/myPetsAPI';\nimport { List, ListItem } from './PetsList.styled';\n\nconst PetsList = () => {\n  const [myPets, setMyPets] = useState([]);\n\n  const getMyPets = async () => {\n    const data = await fethMyPetsAPI('/myPets');\n    setMyPets(data);\n  };\n\n  useEffect(() => {\n    getMyPets();\n  }, []);\n\n  return (\n    <List>\n      {myPets.map(pet => {\n        return (\n          <ListItem key={pet._id}>\n            <PetsItem pet={pet} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default PetsList;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 31px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.75rem;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const AddIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--white);\n`;\n","import React from 'react';\nimport { Button, FilledButton, RoundButton } from './ButtonComponent.styled';\n\nexport default function ButtonComponent(props) {\n  switch (props.$variant) {\n    case 'filled':\n      return <FilledButton {...props}>{props.children}</FilledButton>;\n\n    case 'round':\n      return <RoundButton {...props}>{props.children}</RoundButton>;\n\n    default:\n      return <Button {...props}>{props.children}</Button>;\n  }\n}\n","import { useState, useEffect } from 'react';\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return [windowSize.width, windowSize.height];\n}\n","import PetsList from 'components/PetsList/PetsList';\nimport sprite from 'images/icons/sprite.svg';\nimport { AddIcon, Section, Title } from './PetsData.styled';\n// import AddPetButton from 'components/AddPetButton/AddPetButton';\nimport ButtonComponent from 'components/ButtonComponent/ButtonComponent';\nimport { useNavigate } from 'react-router-dom';\nimport { useWindowSize } from 'hooks/useResize';\n// import { useScrollPosition } from 'hooks/useScrollPosition';\n\nconst PetsData = () => {\n  const [screenWidth] = useWindowSize();\n\n  const navigate = useNavigate();\n  // const scrollPosition = useScrollPosition();\n\n  // console.log(scrollPosition);\n\n  return (\n    <Section>\n      <Title>My pets:</Title>\n      <ButtonComponent\n        $variant={screenWidth >= 768 ? 'filled' : 'round'}\n        onClick={() => navigate('/add-pet')}\n      >\n        <AddIcon>\n          <use\n            href={`${sprite}${\n              screenWidth >= 768 ? '#icon-plus-small' : '#icon-plus'\n            }`}\n          />\n        </AddIcon>\n        Add Pet\n      </ButtonComponent>\n      <PetsList />\n    </Section>\n  );\n};\n\nexport default PetsData;\n","import { styled } from 'styled-components';\n\nexport const Btn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-weight: 500;\n  letter-spacing: 0.64px;\n  height: 31px;\n  color: var(--gray);\n  background: none;\n  border: none;\n  margin-right: auto;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    svg {\n      stroke: var(--yellow);\n    }\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n  transition: stroke var(--transition);\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/AuthSlice/operations';\nimport { Btn, Icon } from './LogoutUserCardBtn.styled';\nimport sprite from 'images/icons/sprite.svg';\nimport LogOutModal from 'components/Modals/LogOutModal/LogOutModal';\n\nconst LogoutUserCardBtn = () => {\n  const [modalActive, setModalActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      <Btn onClick={() => setModalActive(true)}>\n        <Icon>\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        Log out\n      </Btn>\n      <LogOutModal\n        active={modalActive}\n        setActive={setModalActive}\n        yes={handleLogout}\n      />\n    </>\n  );\n};\n\nexport default LogoutUserCardBtn;\n","import { styled } from 'styled-components';\n\nconst ErrorMessage = styled.p`\n  position: absolute;\n  bottom: -12px;\n  left: 80px;\n  font-size: 10px;\n  line-height: normal;\n  letter-spacing: 0.48px;\n  color: #f43f5da6;\n\n  @media screen and (min-width: 768px) {\n    bottom: -11px;\n    left: 110px;\n  }\n`;\n\nconst ValidationError = ({ touched, error }) => {\n  return touched && error ? <ErrorMessage>{error}</ErrorMessage> : null;\n};\n\nexport default ValidationError;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 355px;\n    align-items: end;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n  padding: 22px 0 21px 0;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    padding: 0 0 16px 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 0 10px 0;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.56px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    letter-spacing: 0.72px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 190px;\n  padding: 4px 12px;\n  align-items: center;\n  gap: 191px;\n  border-radius: 20px;\n  border: 1px solid ${props => (props.$isValid ? 'var(--blueLink)' : 'red')};\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: 0.48px;\n\n  @media screen and (min-width: 768px) {\n    width: 255px;\n    font-size: 16px;\n    letter-spacing: 0.64px;\n  }\n`;\n","import ButtonComponent from 'components/ButtonComponent/ButtonComponent';\nimport LogoutUserCardBtn from './LogoutUserCardBtn/LogoutUserCardBtn';\nimport { useWindowSize } from 'hooks/useResize';\nimport ValidationError from './ValidationError';\nimport {\n  Form,\n  Input,\n  InputContainer,\n  InputWrapper,\n  Label,\n} from './UserForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/AuthSlice';\n\nconst UserForm = ({ isEditFormInactive, formik }) => {\n  const [screenWidth] = useWindowSize();\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <InputContainer>\n        <InputWrapper>\n          <Label htmlFor=\"name\">Name:</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.name}\n          />\n          <ValidationError\n            touched={formik.touched.name}\n            error={formik.errors.name}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"email\">Email:</Label>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.email}\n          />\n          <ValidationError\n            touched={formik.touched.email}\n            error={formik.errors.email}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"birthday\">Birthday:</Label>\n          <Input\n            type=\"date\"\n            id=\"birthday\"\n            name=\"birthday\"\n            onChange={formik.handleChange}\n            value={formik.values.birthday}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.birthday}\n          />\n          <ValidationError\n            touched={formik.touched.birthday}\n            error={formik.errors.birthday}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"phone\">Phone:</Label>\n          <Input\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            onChange={formik.handleChange}\n            value={formik.values.phone}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.phone}\n          />\n          <ValidationError\n            touched={formik.touched.phone}\n            error={formik.errors.phone}\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Label htmlFor=\"city\">City:</Label>\n          <Input\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={formik.handleChange}\n            value={formik.values.city}\n            disabled={isEditFormInactive}\n            onBlur={formik.handleBlur}\n            $isValid={!formik.errors.city}\n          />\n          <ValidationError\n            touched={formik.touched.city}\n            error={formik.errors.city}\n          />\n        </InputWrapper>\n      </InputContainer>\n\n      {!isEditFormInactive ? (\n        <ButtonComponent\n          type=\"submit\"\n          height=\"31px\"\n          width={screenWidth >= 768 ? '255px' : '248px'}\n          disabled={!formik.isValid}\n          $variant=\"filled\"\n        >\n          {isLoading ? <span>Loading...</span> : <span>Save</span>}\n        </ButtonComponent>\n      ) : (\n        <LogoutUserCardBtn />\n      )}\n    </Form>\n  );\n};\n\nexport default UserForm;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  width: 100%;\n  padding: 20px 8px 25px 8px;\n  border-radius: 20px;\n  background: var(--white);\n  box-shadow: var(--boxShadowDefault);\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n    gap: 71px;\n    padding: 20px 20px 16px 20px;\n    min-height: 270px;\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 0;\n    width: 395px;\n  }\n`;\n\nexport const CardBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background: none;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    top: 18px;\n    right: 18px;\n  }\n`;\n\nexport const EditIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--blueLink);\n  transition: fill var(--transition);\n\n  &:hover,\n  &:focus {\n    fill: var(--yellow);\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n  transition: stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    stroke: var(--yellow);\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n  height: 224px;\n`;\n\nexport const Thumb = styled.div`\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  overflow: hidden;\n`;\n\nexport const Avatar = styled.img`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const UploadBtn = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: 0.48px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    svg {\n      stroke: var(--yellow);\n    }\n  }\n`;\n\nexport const UploadInput = styled.input`\n  display: none;\n`;\n\nexport const CameraIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n  transition: stroke var(--transition);\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ConfirmBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: 0.48px;\n  background: none;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    svg {\n      stroke: var(--yellow);\n    }\n  }\n`;\n\nexport const ConfirmIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--blueLink);\n  transition: stroke var(--transition);\n`;\n\nexport const RemoveBtn = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const RemoveIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--red);\n`;\n","import * as Yup from 'yup';\n\nconst emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegExp = /^\\+380\\d{9}$/;\nconst dateRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n\nexport const validateUserSchema = Yup.object({\n  name: Yup.string()\n    .required('Please enter your name.')\n    .min(2, 'Name too short.')\n    .max(16, 'Name too long.'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Invalid email format.')\n    .required('Email is required'),\n  birthday: Yup.string()\n    .matches(dateRegExp, 'Please use YYYY-MM-DD format.')\n    .required(),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Please use +380XXXXXXXXX format.')\n    .required(),\n  city: Yup.string().required(),\n});\n","import UserForm from 'components/UserForm/UserForm';\nimport sprite from 'images/icons/sprite.svg';\nimport {\n  CardBtn,\n  Card,\n  Section,\n  Title,\n  AvatarContainer,\n  Avatar,\n  UploadBtn,\n  UploadInput,\n  EditIcon,\n  CloseIcon,\n  Thumb,\n  CameraIcon,\n  ConfirmBtn,\n  BtnWrapper,\n  RemoveBtn,\n  RemoveIcon,\n} from './UserData.styled';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsUserDataLoaded, selectUser } from 'redux/AuthSlice';\nimport { refreshUser, updateUser } from 'redux/AuthSlice/operations';\nimport { validateUserSchema } from 'helpers/validateUserSchema';\n\nconst UserData = () => {\n  const [isEditFormInactive, setIsEditFormInactive] = useState(true);\n  const [uploadAvatarURL, setUploadAvatarURL] = useState(null);\n  const [uploadedAvatar, setUploadedAvatar] = useState(false);\n\n  const user = useSelector(selectUser);\n  const isUserDataLoaded = useSelector(selectIsUserDataLoaded);\n  const dispatch = useDispatch();\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    if (!isUserDataLoaded) {\n      dispatch(refreshUser());\n    }\n  }, [dispatch, isUserDataLoaded]);\n\n  const handleSubmit = async values => {\n    const formData = new FormData();\n\n    for (const key in values) {\n      formData.append(key, values[key]);\n    }\n\n    if (fileInputRef.current.files[0]) {\n      const file = fileInputRef.current.files[0];\n      formData.append('avatar', file);\n      console.log(formData);\n      fileInputRef.current.value = null;\n    }\n\n    const res = await dispatch(updateUser(formData));\n\n    if (updateUser.fulfilled.match(res)) {\n      setIsEditFormInactive(true);\n      return;\n    }\n    alert('database error, please try again later');\n  };\n\n  const handleAvatarConfirm = e => {\n    e.preventDefault();\n    setUploadedAvatar(false);\n  };\n\n  const handleAvatarChange = e => {\n    const file = e.currentTarget.files[0];\n    if (file) {\n      const newAvatarUrl = URL.createObjectURL(file);\n      setUploadAvatarURL(newAvatarUrl);\n      setUploadedAvatar(true);\n    }\n  };\n\n  const handleAvatarRemove = () => {\n    setUploadAvatarURL(null);\n    setUploadedAvatar(false);\n    fileInputRef.current.value = null;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name,\n      email: user.email,\n      birthday: user.birthday,\n      phone: user.phone,\n      city: user.city,\n    },\n    validationSchema: validateUserSchema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Section>\n      <Title>My information:</Title>\n      <Card>\n        <CardBtn onClick={() => setIsEditFormInactive(!isEditFormInactive)}>\n          {isEditFormInactive ? (\n            <EditIcon>\n              <use href={`${sprite}#icon-edit-2`} />\n            </EditIcon>\n          ) : (\n            <CloseIcon>\n              <use href={`${sprite}#icon-cross-small`} />\n            </CloseIcon>\n          )}\n        </CardBtn>\n        <AvatarContainer>\n          <Thumb>\n            <Avatar\n              src={uploadAvatarURL ?? user.avatarURL}\n              alt=\"User avatar\"\n              loading=\"lazy\"\n            />\n          </Thumb>\n          {!isEditFormInactive && (\n            <form onSubmit={handleAvatarConfirm}>\n              <UploadInput\n                id=\"file-upload\"\n                type=\"file\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                onChange={handleAvatarChange}\n                ref={fileInputRef}\n              />\n              {uploadedAvatar ? (\n                <BtnWrapper>\n                  <ConfirmBtn type=\"submit\">\n                    <CameraIcon>\n                      <use href={`${sprite}#icon-check`} />\n                    </CameraIcon>\n                    Confirm\n                  </ConfirmBtn>\n                  <RemoveBtn type=\"button\" onClick={handleAvatarRemove}>\n                    <RemoveIcon>\n                      <use href={`${sprite}#icon-cross-small`} />\n                    </RemoveIcon>\n                  </RemoveBtn>\n                </BtnWrapper>\n              ) : (\n                <UploadBtn htmlFor=\"file-upload\">\n                  <CameraIcon>\n                    <use href={`${sprite}#icon-camera`} />\n                  </CameraIcon>\n                  Edit Photo\n                </UploadBtn>\n              )}\n            </form>\n          )}\n        </AvatarContainer>\n        <UserForm isEditFormInactive={isEditFormInactive} formik={formik} />\n      </Card>\n    </Section>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 46px;\n  padding-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding-top: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n","import PetsData from 'components/PetsData/PetsData';\nimport UserData from 'components/UserData/UserData';\nimport { Wrapper } from './UserPage.styled';\n\nconst UserPage = () => {\n  return (\n    <Wrapper>\n      <UserData />\n      <PetsData />\n    </Wrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["Card","styled","Image","DataWrapper","Text","TextTitle","pet","name","birthday","type","comments","photoURL","src","alt","width","height","loading","fethMyPetsAPI","url","axios","res","data","console","log","List","ListItem","useState","myPets","setMyPets","getMyPets","useEffect","map","_id","Section","Title","AddIcon","ButtonComponent","props","$variant","children","useWindowSize","window","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","screenWidth","navigate","useNavigate","onClick","href","sprite","Btn","Icon","modalActive","setModalActive","dispatch","useDispatch","LogOutModal","active","setActive","yes","logOut","ErrorMessage","touched","error","Form","InputContainer","InputWrapper","Label","Input","$isValid","isEditFormInactive","formik","isLoading","useSelector","selectIsLoading","onSubmit","handleSubmit","htmlFor","id","onChange","handleChange","value","values","disabled","onBlur","handleBlur","errors","email","phone","city","isValid","CardBtn","EditIcon","CloseIcon","AvatarContainer","Thumb","Avatar","UploadBtn","UploadInput","CameraIcon","BtnWrapper","ConfirmBtn","RemoveBtn","RemoveIcon","validateUserSchema","Yup","required","min","max","matches","setIsEditFormInactive","uploadAvatarURL","setUploadAvatarURL","uploadedAvatar","setUploadedAvatar","user","selectUser","isUserDataLoaded","selectIsUserDataLoaded","fileInputRef","useRef","refreshUser","key","formData","FormData","append","current","files","file","updateUser","alert","useFormik","initialValues","validationSchema","avatarURL","e","preventDefault","accept","currentTarget","newAvatarUrl","URL","createObjectURL","ref","Wrapper"],"sourceRoot":""}