{"version":3,"file":"static/js/391.bcbb9562.chunk.js","mappings":"oiBAQaA,EAAsBC,EAAAA,GAAAA,IAAH,o3BAMNC,EAMEC,EAIAC,EAMAC,EAIAC,EAMAC,G,SClC5B,EAJsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,SAACR,EAAD,UAAsBQ,GAC9B,C,2GCFYC,EAAUR,EAAAA,GAAAA,IAAH,sD,8BCAPS,EAAOT,EAAAA,GAAAA,IAAH,gQACN,SAAAU,GAAK,OAAIA,EAAMC,OAAS,OAAnB,I,SCAD,SAASC,EAAT,GAA8C,IAApBL,EAAmB,EAAnBA,SAAUI,EAAS,EAATA,MACjD,OACE,+BACE,SAACF,EAAD,CAAME,MAAOA,EAAb,SAAqBJ,KAG1B,CCPM,IAAMM,EAAQb,EAAAA,GAAAA,GAAH,4NCSlB,I,kBAAA,EARA,YAAmC,IAATc,EAAQ,EAARA,KACxB,OACE,+BACE,SAACD,EAAD,UAAQC,KAGb,ECPYC,EAAoBf,EAAAA,GAAAA,IAAH,iGAOjBgB,EAAYhB,EAAAA,GAAAA,IAAH,wCAITiB,EAAWjB,EAAAA,GAAAA,EAAH,sMACV,SAAAU,GAAK,OAAIA,EAAMQ,OAAS,MAAnB,IASHC,EAAWnB,EAAAA,GAAAA,IAAH,yGAIC,SAAAU,GAAK,OAAIA,EAAMU,IAAM,SAAhB,ICqB3B,EAxCmB,SAAC,GAAc,IAC5BC,EAAiB,GACjBC,EAAkB,GAClBC,EAAiB,GAErB,OAL+B,EAAXC,MAMlB,KAAK,EACHH,EAAiB,UACjB,MACF,KAAK,EACHA,EAAiB,UACjBC,EAAkB,UAClB,MACF,KAAK,EACHD,EAAiB,UACjBC,EAAkB,UAClBC,EAAiB,UAMrB,OACE,UAACR,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAUC,MAAOG,EAAjB,4BACA,SAACF,EAAD,CAAUC,GAAIC,QAEhB,UAACL,EAAD,YACE,SAACC,EAAD,CAAUC,MAAOI,EAAjB,8BACA,SAACH,EAAD,CAAUC,GAAIE,QAEhB,UAACN,EAAD,YACE,SAACC,EAAD,CAAUC,MAAOK,EAAjB,wBACA,SAACJ,EAAD,CAAUC,GAAIG,SAIrB,E,oBCvBKE,EAA0BC,EAAAA,KAAaC,MAAM,CACjDC,SAAUF,EAAAA,KACPG,SAAS,0CACTC,MAAM,CAAC,OAAQ,aAAc,gBAAiB,eAgFnD,EA7EyB,SAAApB,GAiCvB,OACE,+BACE,UAACE,EAAD,YACE,SAAC,EAAD,CAAgBE,KAAK,aACrB,SAAC,EAAD,CAAYU,KAAM,KAClB,SAAC,KAAD,CACEO,iBAAkBN,EAClBO,cAAetB,EAAMuB,KACrBC,SAxCa,SAAAC,GACnBzB,EAAM0B,KAAKD,EACZ,EAmCK,SAKG,kBACC,UAAC,KAAD,YACE,iBAAKE,KAAK,QAAQ,kBAAgB,uBAAlC,WACE,8BACE,SAAC,KAAD,CAAOC,KAAK,QAAQxB,KAAK,WAAWyB,MAAM,aAD5C,eAKA,8BACE,SAAC,KAAD,CAAOD,KAAK,QAAQxB,KAAK,WAAWyB,MAAM,SAD5C,WAKA,8BACE,SAAC,KAAD,CAAOD,KAAK,QAAQxB,KAAK,WAAWyB,MAAM,eAD5C,iBAKA,8BACE,SAAC,KAAD,CAAOD,KAAK,QAAQxB,KAAK,WAAWyB,MAAM,kBAD5C,oBAIA,SAAC,KAAD,CAAczB,KAAK,iBAErB,mBAAQwB,KAAK,SAAb,mBACA,mBAAQA,KAAK,SAAb,oBAzBH,QAgCV,ECtFYE,GAfexC,EAAAA,GAAAA,IAAH,2IAQUA,EAAAA,EAAAA,IAAOyC,EAAAA,GAAPzC,CAAH,0GAOHA,EAAAA,GAAAA,IAAH,0GAOb0C,GAAc1C,EAAAA,EAAAA,IAAO2C,EAAAA,GAAP3C,CAAH,gLAWX4C,EAAc5C,EAAAA,GAAAA,MAAH,yJCpBlB6C,EAA0BnB,EAAAA,KAAaC,MAAM,CACjDb,KAAMY,EAAAA,KACHG,SAAS,wBACTiB,IAAI,EAAG,iBACPC,IAAI,GAAI,kBAEXC,KAAMtB,EAAAA,KACHG,SAAS,uCACToB,QACC,yDACA,uBAGJX,KAAMZ,EAAAA,KACHG,SAAS,kBACTiB,IAAI,EAAG,iBACPC,IAAI,GAAI,kBAEXG,WAAYxB,EAAAA,KACTG,SAAS,8BACTiB,IAAI,EAAG,iBACPC,IAAI,GAAI,oBAiEb,EA9D4B,SAAArC,GAe1B,OACE,UAACE,EAAD,YACE,SAAC,EAAD,CAAgBE,KAAK,aACrB,SAAC,EAAD,CAAYU,KAAM,KAClB,SAAC,KAAD,CACEO,iBAAkBc,EAClBb,cAAetB,EAAMuB,KACrBC,SArBe,SAAAC,GACnBzB,EAAM0B,KAAKD,EACZ,EAgBG,SAKG,gBAAGA,EAAH,EAAGA,OAAH,OACC,UAAC,KAAD,YACE,4BACE,UAACK,EAAD,YACE,SAACI,EAAD,CAAaO,QAAQ,aAArB,4BACA,SAACT,EAAD,CAAaU,GAAG,aAAatC,KAAK,gBAClC,SAAC,KAAD,CAAcA,KAAK,mBAGrB,UAAC0B,EAAD,YACE,SAACI,EAAD,CAAaO,QAAQ,OAArB,0BACA,SAACT,EAAD,CAAaU,GAAG,OAAOtC,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,aAGrB,UAAC0B,EAAD,YACE,SAACI,EAAD,CAAaO,QAAQ,OAArB,6BACA,SAACT,EAAD,CAAaU,GAAG,OAAOtC,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,aAGrB,UAAC0B,EAAD,YACE,SAACI,EAAD,CAAaO,QAAQ,OAArB,oBACA,SAACT,EAAD,CAAaU,GAAG,OAAOtC,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,gBAGvB,mBAAQwB,KAAK,SAASe,QAAS,kBAAM3C,EAAM4C,KAAKnB,EAAjB,EAA/B,mBAGA,mBAAQG,KAAK,SAAb,oBA9BH,MAoCR,ECzFKiB,EAA4B7B,EAAAA,KAAaC,MAAM,CACnD6B,KAAM9B,EAAAA,KACHG,SAAS,iBACT4B,KAAK,WAAY,kCAAkC,SAAAlB,GAClD,OAAKA,GACEA,EAAMmB,MAAQ,OACtB,IAEHC,IAAKjC,EAAAA,KAAakC,KAAK,WAAY,CACjCC,GAAI,SAAAC,GAAG,MAAI,CAAC,OAAQ,aAAc,iBAAiBC,SAASD,EAArD,EACPE,KAAMtC,EAAAA,KAAaG,SAAS,iBAAiBC,MAAM,CAAC,OAAQ,aAG9DmC,SAAUvC,EAAAA,KAAakC,KAAK,WAAY,CACtCC,GAAI,SAAAC,GAAG,MAAI,CAAC,OAAQ,aAAc,iBAAiBC,SAASD,EAArD,EACPE,KAAMtC,EAAAA,KAAaG,SAAS,oBAG9BqC,MAAOxC,EAAAA,KAAakC,KAAK,WAAY,CACnCC,GAAI,SAAAC,GAAG,MAAY,SAARA,CAAJ,EACPE,KAAMtC,EAAAA,KACHG,SAAS,eACTiB,IAAI,EAAG,sCAGZqB,SAAUzC,EAAAA,KAAaqB,IAAI,IAAK,qBA4ElC,EAzEwB,SAAArC,GAgBtB,OACE,+BACE,UAACE,EAAD,YACE,SAAC,EAAD,CAAgBE,KAAK,aACrB,SAAC,EAAD,CAAYU,KAAM,KAClB,SAAC,KAAD,CACEO,iBAAkBwB,EAClBvB,cAAetB,EAAMuB,KACrBC,SAvBa,SAAAC,GACnBzB,EAAM0B,KAAKD,GAAQ,EACpB,EAkBK,SAKG,gBAAGA,EAAH,EAAGA,OAAH,OACC,UAAC,KAAD,YACE,4BACE,4BACE,iBAAKE,KAAK,QAAQ,kBAAgB,qBAAlC,WACE,8BACE,SAAC,KAAD,CAAOC,KAAK,QAAQxB,KAAK,MAAMyB,MAAM,WADvC,aAIA,8BACE,SAAC,KAAD,CAAOD,KAAK,QAAQxB,KAAK,MAAMyB,MAAM,SADvC,WAIA,SAAC,KAAD,CAAczB,KAAK,YAGrB,kBAAOqC,QAAQ,OAAf,2CACA,SAAC,KAAD,CAAOC,GAAG,OAAOtC,KAAK,OAAOwB,KAAK,UAClC,SAAC,KAAD,CAAcxB,KAAK,aAGrB,4BACE,kBAAOqC,QAAQ,WAAf,wBACA,SAAC,KAAD,CAAOC,GAAG,WAAWtC,KAAK,cAC1B,SAAC,KAAD,CAAcA,KAAK,cAEnB,kBAAOqC,QAAQ,QAAf,qBACA,SAAC,KAAD,CAAOC,GAAG,QAAQtC,KAAK,WACvB,SAAC,KAAD,CAAcA,KAAK,WAEnB,kBAAOqC,QAAQ,WAAf,wBACA,SAAC,KAAD,CAAOC,GAAG,WAAWtC,KAAK,cAC1B,SAAC,KAAD,CAAcA,KAAK,oBAGvB,mBAAQwB,KAAK,SAASe,QAAS,kBAAM3C,EAAM4C,KAAKnB,EAAjB,EAA/B,mBAGA,mBAAQG,KAAK,SAAb,oBAtCH,QA6CV,ECQD,MA3GA,WACE,IAaA,GAAgC8B,EAAAA,EAAAA,UAbR,CACtBxC,SAAU,GACVyC,SAAU,GACVC,gBAAiB,GACjBC,SAAU,GACVrB,WAAY,GACZsB,UAAW,GACXL,SAAU,GACVF,SAAU,GACVC,MAAO,GACPP,IAAK,GACLc,QAAS,UAEX,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCP,EAAAA,EAAAA,UAAS,GAA/C,eAAOQ,EAAP,KAAoBC,EAApB,KAGMC,EAAc,SAAAJ,GAClBK,QAAQC,IAAI,iBAAkBN,EAC/B,EAEKO,EAAiB,SAACC,GAA4B,IAAnBC,EAAkB,wDACjDR,GAAY,SAAArB,GAAI,yBAAUA,GAAS4B,EAAnB,IAEZC,EACFL,EAAYI,GAGdL,GAAe,SAAAvB,GAAI,OAAIA,EAAO,CAAX,GACpB,EAEK8B,EAAiB,SAAAF,GACrBP,GAAY,SAAArB,GAAI,yBAAUA,GAAS4B,EAAnB,IAChBL,GAAe,SAAAvB,GAAI,OAAIA,EAAO,CAAX,GACpB,EACK+B,EAAQ,EACZ,SAAC,EAAD,CAAkBjD,KAAM6C,EAAgBhD,KAAMyC,KAC9C,SAAC,EAAD,CACEtC,KAAM6C,EACN3B,KAAM8B,EACNnD,KAAMyC,KAER,SAAC,EAAD,CACEtC,KAAM6C,EACN3B,KAAM8B,EACNnD,KAAMyC,KAiDV,OA7CAK,QAAQC,IAAI,QAASN,IA8CnB,SAACY,EAAA,EAAD,UACGD,EAAMT,IAQZ,ECxGD,EARmB,WACjB,OACE,SAACpE,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/BackgroundImg/BackgroundImg.styled.js","components/BackgroundImg/BackgroundImg.jsx","pages/AddPetPage/AddPetPage.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.jsx","components/TitleComponent/TitleComponent.styled.js","components/TitleComponent/TitleComponent.jsx","components/AddPetForm/StepsBlock/StepsBlock.styled.js","components/AddPetForm/StepsBlock/StepsBlock.jsx","components/AddPetForm/Step1/ChooseOptionForm.jsx","components/AddPetForm/Step2/PersonalDetailsForm.styled.js","components/AddPetForm/Step2/PersonalDetailsForm.jsx","components/AddPetForm/Step3/MoreDetailsForm.jsx","components/AddPetForm/AddPetForm.jsx","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport bgMobile1x from '../../images/background/bg-mobile@1x.png';\nimport bgMobile2x from '../../images/background/bg-mobile@2x.png';\nimport bgTablet1x from '../../images/background/bg-tablet@1x.png';\nimport bgTablet2x from '../../images/background/bg-tablet@2x.png';\nimport bgDesktop1x from '../../images/background/bg-desktop@1x.png';\nimport bgDesktop2x from '../../images/background/bg-desktop@2x.png';\n\nexport const StyledBackgroundImg = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-color: var(--background);\n  background-image: url(${bgMobile1x});\n  background-repeat: no-repeat;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${bgTablet1x});\n  }\n\n  @media screen and (min-width: 768px) and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgTablet2x});\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesktop1x});\n  }\n\n  @media screen and (min-width: 1280px) and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgDesktop2x});\n  }\n`;\n","import { StyledBackgroundImg } from './BackgroundImg.styled';\n\nconst BackgroundImg = ({ children }) => {\n  return <StyledBackgroundImg>{children}</StyledBackgroundImg>;\n};\n\nexport default BackgroundImg;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #fef9f9;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  width: ${props => props.width || '458px'};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 40px;\n  background: #fff;\n  margin: 0 auto;\n  padding: 32px 20px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n`;\n","import React from 'react';\nimport { Card } from './BackgroundCard.styled';\n\nexport default function BackgroundCard({ children, width }) {\n  return (\n    <>\n      <Card width={width}>{children}</Card>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\ncolor: #111111;\nfont-family: Manrope, sans-serif;\nfont-weight: 700;\nfont-size: 24px;\nline-height: 1.36;\ntext-align: center;\n\n@media screen and (min-width: 768px){\n    font-size: 48px;\n}\n`","import React from 'react';\nimport { Title } from './TitleComponent.styled';\n\nfunction TitleComponent({ name }) {\n  return (\n    <>\n      <Title>{name}</Title>\n    </>\n  );\n}\n\nexport default TitleComponent;\n","import styled from 'styled-components';\n\nexport const StepsBlockWrapper = styled.div`\n  width: 392px;\n  display: flex;\n  gap: 12px;\n  margin-bottom: 24px;\n`;\n\nexport const StepBlock = styled.div`\n  width: 100%;\n`;\n\nexport const StepName = styled.p`\n  color: ${props => props.color || '#888'};\n  text-align: start;\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin-bottom: 12px;\n`;\nexport const StepLine = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: ${props => props.bg || '#cce4fb'};\n`;\n","import React from 'react';\nimport {\n  StepBlock,\n  StepLine,\n  StepName,\n  StepsBlockWrapper,\n} from './StepsBlock.styled';\n\nconst StepsBlock = ({ step }) => {\n  let firstStepColor = '';\n  let secondStepColor = '';\n  let thirdStepColor = '';\n\n  switch (step) {\n    case 1:\n      firstStepColor = '#54ADFF';\n      break;\n    case 2:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#54ADFF';\n      break;\n    case 3:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#00C3AD';\n      thirdStepColor = '#54ADFF';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <StepsBlockWrapper>\n      <StepBlock>\n        <StepName color={firstStepColor}>Choose option</StepName>\n        <StepLine bg={firstStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={secondStepColor}>Persons details</StepName>\n        <StepLine bg={secondStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={thirdStepColor}>More info</StepName>\n        <StepLine bg={thirdStepColor} />\n      </StepBlock>\n    </StepsBlockWrapper>\n  );\n};\n\nexport default StepsBlock;\n","import React from 'react';\n// import { FormContext } from '../AddPetForm';\n// import {\n//   Form,\n//   RadioButton,\n//   RadioWrapper,\n//   Label,\n// } from './ChooseOptionForm.styled';\nimport BackgroundCard from '../BackgroundCard';\nimport TitleComponent from '../../TitleComponent/TitleComponent';\nimport StepsBlock from '../StepsBlock';\n// import ButtonsBlock from '../ButtonsBlock';\n// import sprite from '../../../images/icons/sprite.svg';\n// import {\n//   ButtonBlue,\n//   ButtonWhite,\n//   BtnIcon,\n// } from '../ButtonsBlock/ButtonsBlock.styled';\n// import ErrorComponent from '../ErrorComponent';\n\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst stepOneValidationSchema = Yup.object().shape({\n  category: Yup.string()\n    .required('Choose one of the available categories')\n    .oneOf(['sell', 'lost/found', 'in good hands', 'your pet']),\n});\n\nconst ChooseOptionForm = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  // const formProps = useContext(FormContext);\n  // const {\n  //   formData,\n  //   handleChange,\n  //   currentStep,\n  //   totalSteps,\n  //   nextStep,\n  //   backStep,\n  //   handleSubmit,\n  // } = formProps;\n\n  // const [validationError, setValidationError] = useState(false);\n\n  // const validateForm = () => {\n  //   if (formData.category === '') {\n  //     setValidationError(true);\n  //     return false;\n  //   }\n  //   return true;\n  // };\n  // console.log(validationError);\n\n  // const handleNextStep = () => {\n  //   const isValid = validateForm();\n  //   if (isValid) {\n  //     nextStep(nextStep); // Викликаємо наступний крок, якщо валідація успішна\n  //   }\n  // };\n  return (\n    <>\n      <BackgroundCard>\n        <TitleComponent name=\"Add pet\" />\n        <StepsBlock step={1} />\n        <Formik\n          validationSchema={stepOneValidationSchema}\n          initialValues={props.data}\n          onSubmit={handleSubmit}\n        >\n          {() => (\n            <Form>\n              <div role=\"group\" aria-labelledby=\"category-radio-group\">\n                <label>\n                  <Field type=\"radio\" name=\"category\" value=\"your pet\" />\n                  your pet\n                </label>\n\n                <label>\n                  <Field type=\"radio\" name=\"category\" value=\"sell\" />\n                  sell\n                </label>\n\n                <label>\n                  <Field type=\"radio\" name=\"category\" value=\"lost/found\" />\n                  lost/found\n                </label>\n\n                <label>\n                  <Field type=\"radio\" name=\"category\" value=\"in good hands\" />\n                  in good hands\n                </label>\n                <ErrorMessage name=\"category\" />\n              </div>\n              <button type=\"button\">Back</button>\n              <button type=\"submit\">Next</button>\n            </Form>\n          )}\n        </Formik>\n      </BackgroundCard>\n    </>\n  );\n};\n\nexport default ChooseOptionForm;\n\n//  return (\n//     <>\n//       <BackgroundCard>\n//         <TitleComponent name=\"Add pet\" />\n//         <StepsBlock step={currentStep} />\n\n//         <Form onSubmit={handleSubmit}>\n//           <RadioWrapper role=\"goup\" aria-labelledby=\"category-radio-group\">\n//             <Label htmlFor=\"yourPet\">\n//               <RadioButton\n//                 type=\"radio\"\n//                 id=\"yourPet\"\n//                 name=\"category\"\n//                 value=\"your pet\"\n//                 onChange={handleChange}\n//                 checked={formData.category === 'your pet'}\n//               />\n//               your pet\n//             </Label>\n\n//             <Label htmlFor=\"sell\">\n//               <RadioButton\n//                 type=\"radio\"\n//                 id=\"sell\"\n//                 name=\"category\"\n//                 value=\"sell\"\n//                 onChange={handleChange}\n//                 checked={formData.category === 'sell'}\n//               />\n//               sell\n//             </Label>\n\n//             <Label htmlFor=\"lostFound\">\n//               <RadioButton\n//                 type=\"radio\"\n//                 id=\"lostFound\"\n//                 name=\"category\"\n//                 value=\"lost/found\"\n//                 onChange={handleChange}\n//                 checked={formData.category === 'lost/found'}\n//               />\n//               lost/found\n//             </Label>\n\n//             <Label htmlFor=\"inGoodHands\">\n//               <RadioButton\n//                 type=\"radio\"\n//                 id=\"inGoodHands\"\n//                 name=\"category\"\n//                 value=\"in good hands\"\n//                 onChange={handleChange}\n//                 checked={formData.category === 'in good hands'}\n//               />\n//               in good hands\n//             </Label>\n//           </RadioWrapper>\n//           {/* {validationError && <ErrorComponent>Error message</ErrorComponent>} */}\n//         </Form>\n\n//         <ButtonsBlock\n//           currentStep={currentStep}\n//           totalSteps={totalSteps}\n//           nextStep={handleNextStep}\n//           backStep={backStep}\n//           handleSubmit={handleSubmit}\n//         />\n//         {/* <div>\n//           <ButtonWhite>\n//             <BtnIcon>\n//               <use href={`${sprite}#icon-arrow-left`} />\n//             </BtnIcon>\n//             Cancel\n//           </ButtonWhite>\n//           <ButtonBlue\n//             onClick={\n//               validation ? (\n//                 nextStep\n//               ) : (\n//                 <ErrorComponent>\n//                   Please select at least one category\n//                 </ErrorComponent>\n//               )\n//             }\n//           >\n//             Next\n//             <BtnIcon>\n//               <use href={`${sprite}#icon-pawprint-1`} />\n//             </BtnIcon>\n//           </ButtonBlue>\n//         </div> */}\n//       </BackgroundCard>\n//     </>\n//   );\n// };\n\n// export default ChooseOptionForm;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field} from 'formik';\n\nexport const temporaryBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid #111;\n  border-radius: 20px;\n`;\n\nexport const FormPersonalDetails = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 24px;\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n`;\n\nexport const DetailInput = styled(Field)`\n  display: flex;\n  width: 394px;\n  padding: 12px 16px;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 40px;\n  border: 1px solid #54adff;\n`;\n\nexport const DetailLabel = styled.label`\n  color: #111;\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 26.5px;\n`;\n","import { Form, Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React from 'react';\n// import { FormContext } from '../AddPetForm';\n// import { temporaryBox } from './PersonalDetailsForm.styled';\nimport {\n  // FormPersonalDetails,\n  DetailWrapper,\n  DetailInput,\n  DetailLabel,\n} from './PersonalDetailsForm.styled';\nimport BackgroundCard from '../BackgroundCard';\nimport TitleComponent from '../../TitleComponent/TitleComponent';\nimport StepsBlock from '../StepsBlock';\n// import ButtonsBlock from '../ButtonsBlock';\n\nconst stepTwoValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Enter the pet's name\")\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  date: Yup.string()\n    .required('Enter the date in DD-MM-YYYY format')\n    .matches(\n      /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(19|20)\\d\\d$/,\n      'Invalid date format'\n    ),\n\n  type: Yup.string()\n    .required('Enter the type')\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  titleOfAdd: Yup.string()\n    .required('Enter the title of the add')\n    .min(3, 'min 3 symbols')\n    .max(16, 'max 16 symbols'),\n});\n\nconst PersonalDetailsForm = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n  // const formProps = useContext(FormContext);\n  // const {\n  //   formData,\n  //   handleChange,\n  //   currentStep,\n  //   totalSteps,\n  //   nextStep,\n  //   backStep,\n  //   handleSubmit,\n  // } = formProps;\n\n  return (\n    <BackgroundCard>\n      <TitleComponent name=\"Add pet\" />\n      <StepsBlock step={2} />\n      <Formik\n        validationSchema={stepTwoValidationSchema}\n        initialValues={props.data}\n        onSubmit={handleSubmit}\n      >\n        {({ values }) => (\n          <Form>\n            <div>\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"titleOfAdd\"> Title of add</DetailLabel>\n                <DetailInput id=\"titleOfAdd\" name=\"titleOfAdd\"></DetailInput>\n                <ErrorMessage name=\"titleOfAdd\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"name\"> Pet's name</DetailLabel>\n                <DetailInput id=\"name\" name=\"name\"></DetailInput>\n                <ErrorMessage name=\"name\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"date\"> Date Of Birth</DetailLabel>\n                <DetailInput id=\"date\" name=\"date\"></DetailInput>\n                <ErrorMessage name=\"date\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"type\"> Type</DetailLabel>\n                <DetailInput id=\"type\" name=\"type\"></DetailInput>\n                <ErrorMessage name=\"type\" />\n              </DetailWrapper>\n            </div>\n            <button type=\"button\" onClick={() => props.prev(values)}>\n              Back\n            </button>\n            <button type=\"submit\">Next</button>\n          </Form>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default PersonalDetailsForm;\n\n//   return (\n//     <BackgroundCard>\n//       <TitleComponent name=\"Add pet\" />\n//       <StepsBlock step={currentStep} />\n//       <FormPersonalDetails onSubmit={handleSubmit}>\n//         {formData.category !== 'your pet' && (\n//           <DetailWrapper>\n//             <DetailLabel htmlFor=\"titleOfAdd\">Title of add</DetailLabel>\n//             <DetailInput\n//               type=\"text\"\n//               name=\"titleOfAdd\"\n//               value={formData.titleOfAdd}\n//               onChange={handleChange}\n//               placeholder=\"Title of add\"\n//             />\n//           </DetailWrapper>\n//         )}\n//         <DetailWrapper>\n//           <DetailLabel htmlFor=\"petsName\">Pet's name</DetailLabel>\n//           <DetailInput\n//             type=\"text\"\n//             name=\"petsName\"\n//             value={formData.petsName}\n//             onChange={handleChange}\n//             placeholder=\"Name of pet\"\n//           />\n//         </DetailWrapper>\n//         <DetailWrapper>\n//           <DetailLabel htmlFor=\"petsDateOfBirth\">Date of birth</DetailLabel>\n//           <DetailInput\n//             type=\"text\"\n//             name=\"petsDateOfBirth\"\n//             value={formData.petsDateOfBirth}\n//             onChange={handleChange}\n//             placeholder=\"00.00.0000\"\n//           />\n//         </DetailWrapper>\n//         <DetailWrapper>\n//           <DetailLabel htmlFor=\"petsType\">Type</DetailLabel>\n//           <DetailInput\n//             type=\"text\"\n//             name=\"petsType\"\n//             value={formData.petsType}\n//             onChange={handleChange}\n//             placeholder=\"Type of pets\"\n//           />\n//         </DetailWrapper>\n//       </FormPersonalDetails>\n//       <ButtonsBlock\n//         currentStep={currentStep}\n//         totalSteps={totalSteps}\n//         nextStep={nextStep}\n//         backStep={backStep}\n//         handleSubmit={handleSubmit}\n//       />\n//     </BackgroundCard>\n//   );\n// };\n\n// export default PersonalDetailsForm;\n","import { Form, Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React from 'react';\n// import { FormContext } from '../AddPetForm';\n// import AddMoreDetailsForm from './AddMoreDetailsForm';\n// import SellMoreDetailsForm from './SellMoreDetailsForm';\nimport BackgroundCard from '../BackgroundCard';\nimport TitleComponent from '../../TitleComponent/TitleComponent';\nimport StepsBlock from '../StepsBlock';\n// import ButtonsBlock from '../ButtonsBlock';\n\nconst stepThreeValidationSchema = Yup.object().shape({\n  file: Yup.mixed()\n    .required('Select a file')\n    .test('fileSize', 'The file must be less than 3MB', value => {\n      if (!value) return true; // Дозволити порожні значення\n      return value.size <= 3145728; // 3MB in bytes\n    }),\n\n  sex: Yup.string().when('category', {\n    is: val => ['sell', 'lost-found', 'in-good-hands'].includes(val),\n    then: Yup.string().required('Select gender').oneOf(['male', 'female']),\n  }),\n\n  location: Yup.string().when('category', {\n    is: val => ['sell', 'lost-found', 'in-good-hands'].includes(val),\n    then: Yup.string().required('Enter location'),\n  }),\n\n  price: Yup.number().when('category', {\n    is: val => val === 'sell',\n    then: Yup.number()\n      .required('Enter price')\n      .min(1, 'The price must be greater than 0'),\n  }),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst MoreDetailsForm = props => {\n  const handleSubmit = values => {\n    props.next(values, true);\n  };\n\n  // const formProps = useContext(FormContext);\n  // const {\n  //   formData,\n  //   handleChange,\n  //   currentStep,\n  //   totalSteps,\n  //   nextStep,\n  //   backStep,\n  //   handleSubmit,\n  // } = formProps;\n\n  return (\n    <>\n      <BackgroundCard>\n        <TitleComponent name=\"Add pet\" />\n        <StepsBlock step={3} />\n        <Formik\n          validationSchema={stepThreeValidationSchema}\n          initialValues={props.data}\n          onSubmit={handleSubmit}\n        >\n          {({ values }) => (\n            <Form>\n              <div>\n                <div>\n                  <div role=\"group\" aria-labelledby=\"gender-radio-group\">\n                    <label>\n                      <Field type=\"radio\" name=\"sex\" value=\"female\" />\n                      Female\n                    </label>\n                    <label>\n                      <Field type=\"radio\" name=\"sex\" value=\"male\" />\n                      Male\n                    </label>\n                    <ErrorMessage name=\"sex\" />\n                  </div>\n\n                  <label htmlFor=\"file\"> Load the pet’s image: </label>\n                  <Field id=\"file\" name=\"file\" type=\"file\"></Field>\n                  <ErrorMessage name=\"file\" />\n                </div>\n\n                <div>\n                  <label htmlFor=\"location\"> Location</label>\n                  <Field id=\"location\" name=\"location\"></Field>\n                  <ErrorMessage name=\"location\" />\n\n                  <label htmlFor=\"price\"> Price</label>\n                  <Field id=\"price\" name=\"price\"></Field>\n                  <ErrorMessage name=\"price\" />\n\n                  <label htmlFor=\"comments\"> Comments</label>\n                  <Field id=\"comments\" name=\"comments\"></Field>\n                  <ErrorMessage name=\"comments\" />\n                </div>\n              </div>\n              <button type=\"button\" onClick={() => props.prev(values)}>\n                Back\n              </button>\n              <button type=\"submit\">Done</button>\n            </Form>\n          )}\n        </Formik>\n      </BackgroundCard>\n    </>\n  );\n};\n\nexport default MoreDetailsForm;\n\n//   return (\n//     <>\n//       {formData.category === 'your pet' ? (\n//         <BackgroundCard>\n//           <TitleComponent name=\"Add pet\" />\n//           <StepsBlock step={currentStep} />\n//           <AddMoreDetailsForm\n//             formData={formData}\n//             handleChange={handleChange}\n//             handleSubmit={handleSubmit}\n//           />\n//           <ButtonsBlock\n//             currentStep={currentStep}\n//             totalSteps={totalSteps}\n//             nextStep={nextStep}\n//             backStep={backStep}\n//             handleSubmit={handleSubmit}\n//           />\n//         </BackgroundCard>\n//       ) : (\n//         <BackgroundCard width=\"882px\">\n//           <TitleComponent name=\"Add pet\" />\n//           <StepsBlock step={currentStep} />\n//           <SellMoreDetailsForm\n//             formData={formData}\n//             handleChange={handleChange}\n//             handleSubmit={handleSubmit}\n//           />\n//           <ButtonsBlock\n//             currentStep={currentStep}\n//             totalSteps={totalSteps}\n//             nextStep={nextStep}\n//             backStep={backStep}\n//             handleSubmit={handleSubmit}\n//           />\n//         </BackgroundCard>\n//       )}\n//     </>\n//   );\n// };\n\n// export default MoreDetailsForm;\n","import React, { createContext, useState } from 'react';\nimport BackgroundImg from '../BackgroundImg/BackgroundImg';\n\nimport ChooseOptionForm from './Step1/ChooseOptionForm';\nimport PersonalDetailsForm from './Step2/PersonalDetailsForm';\nimport MoreDetailsForm from './Step3/MoreDetailsForm';\n\n// import axios from 'axios';\n\nexport const FormContext = createContext();\n\nfunction AddPetForm() {\n  const initialFormData = {\n    category: '',\n    petsName: '',\n    petsDateOfBirth: '',\n    petsType: '',\n    titleOfAdd: '',\n    petsImage: '',\n    comments: '',\n    location: '',\n    price: '',\n    sex: '',\n    isError: 'false',\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [currentStep, setCurrentStep] = useState(0);\n  // const totalSteps = 3; // need to be update with actual number of forms\n\n  const makeRequest = formData => {\n    console.log('Form Submitted', formData);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setFormData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handleBackStep = newData => {\n    setFormData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n  const steps = [\n    <ChooseOptionForm next={handleNextStep} data={formData} />,\n    <PersonalDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n    <MoreDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n  ];\n\n  console.log('data:', formData);\n  // const handleSubmit = async e => {\n  //     e.preventDefault();\n  //     try {\n  //       const response = await axios.post(\n  //         'http://localhost:3001/form',\n  //         formData\n  //       );\n  //       if (response.data.success) {\n  //         alert('Data sent successfully');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error sending data', error);\n  //     }\n\n  //     console.log('Спрацював сабміт:', formData);\n  //     setFormData(initialFormData);\n  // };\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n  //   setFormData({ ...formData, [name]: value });\n  //   console.log(formData);\n  // };\n\n  // const nextStep = () => {\n  //   setCurrentStep(currentStep + 1);\n  //   console.log(formData);\n  // };\n\n  // const backStep = () => {\n  //   setCurrentStep(currentStep - 1);\n  //   console.log(formData);\n  // };\n\n  // const formProps = {\n  //   formData,\n  //   handleChange,\n  //   currentStep,\n  //   totalSteps,\n  //   nextStep,\n  //   backStep,\n  //   handleSubmit,\n  // };\n\n  return (\n    <BackgroundImg>\n      {steps[currentStep]}\n      {/* <FormContext.Provider value={formProps}>\n        {currentStep === 1 && <ChooseOptionForm />}\n        {currentStep === 2 && <PersonalDetailsForm />}\n        {currentStep === 3 && <MoreDetailsForm />}\n      </FormContext.Provider> */}\n    </BackgroundImg>\n  );\n}\n\nexport default AddPetForm;\n","import React from 'react';\nimport { Wrapper } from './AddPetPage.styled';\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <Wrapper>\n      <AddPetForm />\n    </Wrapper>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["StyledBackgroundImg","styled","bgMobile1x","bgMobile2x","bgTablet1x","bgTablet2x","bgDesktop1x","bgDesktop2x","children","Wrapper","Card","props","width","BackgroundCard","Title","name","StepsBlockWrapper","StepBlock","StepName","color","StepLine","bg","firstStepColor","secondStepColor","thirdStepColor","step","stepOneValidationSchema","Yup","shape","category","required","oneOf","validationSchema","initialValues","data","onSubmit","values","next","role","type","value","DetailWrapper","FormikForm","DetailInput","Field","DetailLabel","stepTwoValidationSchema","min","max","date","matches","titleOfAdd","htmlFor","id","onClick","prev","stepThreeValidationSchema","file","test","size","sex","when","is","val","includes","then","location","price","comments","useState","petsName","petsDateOfBirth","petsType","petsImage","isError","formData","setFormData","currentStep","setCurrentStep","makeRequest","console","log","handleNextStep","newData","final","handleBackStep","steps","BackgroundImg"],"sourceRoot":""}