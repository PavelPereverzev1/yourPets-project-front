{"version":3,"file":"static/js/976.0419c670.chunk.js","mappings":"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","sources":["components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.jsx","services/myPetsAPI.js","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.jsx","components/PetsData/PetsData.styled.js","components/PetsData/PetsData.jsx","components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.js","helpers/validateUserSchema.js","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  width: 51.3125rem;\n  padding: 1.25rem;\n  gap: 2rem;\n\n  border-radius: 2.5rem;\n  background: var(--white);\n\n  /* Shadow default */\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n`;\n\nexport const Image = styled.img`\n  width: 10.0625rem;\n  height: 10.0625rem;\n  border-radius: 2.5rem;\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n`;\n\nexport const Text = styled.p`\n  font-size: 1rem;\n  line-height: 1.375rem;\n  letter-spacing: 0.04rem;\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 600;\n  line-height: normal;\n`;\n","import React from 'react';\nimport { Card, DataWrapper, Image, Text, TextTitle } from './PetsItem.styled';\n\nconst PetsItem = ({ pet }) => {\n  const { image, type, name, datebirth, comments } = pet;\n  return (\n    <Card>\n      <Image\n        src={image}\n        alt={type}\n        width=\"10.0625rem\"\n        height=\"10.0625rem\"\n        loading=\"lazy\"\n      />\n      <DataWrapper>\n        <Text>\n          <TextTitle>Name: </TextTitle>\n          {name}\n        </Text>\n        <Text>\n          <TextTitle>Date of birth: </TextTitle>\n          {datebirth}\n        </Text>\n        <Text>\n          <TextTitle>Type: </TextTitle>\n          {type}\n        </Text>\n        <Text>\n          <TextTitle>Comments: </TextTitle>\n          {comments}\n        </Text>\n      </DataWrapper>\n    </Card>\n  );\n};\n\nexport default PetsItem;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://64fde15b596493f7af7eb5ee.mockapi.io/';\n\nexport const fethMyPetsAPI = async url => {\n  try {\n    const responce = await axios.get(`${BASE_URL}${url}`);\n    return responce.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nexport const ListItem = styled.li``;\n","import PetsItem from 'components/PetsItem/PetsItem';\nimport { useEffect, useState } from 'react';\nimport { fethMyPetsAPI } from 'services/myPetsAPI';\nimport { List, ListItem } from './PetsList.styled';\n\nconst PetsList = () => {\n  const [myPets, setMyPets] = useState([]);\n\n  const getMyPets = async () => {\n    const data = await fethMyPetsAPI('/myPets');\n    setMyPets(data);\n  };\n\n  useEffect(() => {\n    getMyPets();\n  }, []);\n\n  return (\n    <List>\n      {myPets.map(pet => {\n        return (\n          <ListItem key={pet.id}>\n            <PetsItem pet={pet} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default PetsList;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.75rem;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n","import PetsList from 'components/PetsList/PetsList';\nimport { Section, Title } from './PetsData.styled';\n\nconst PetsData = () => {\n  return (\n    <Section>\n      <Title>My pets:</Title>\n      <PetsList />\n    </Section>\n  );\n};\n\nexport default PetsData;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.72px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 255px;\n  padding: 4px 12px;\n  align-items: center;\n  gap: 191px;\n  border-radius: 20px;\n  border: 1px solid var(--blueLink);\n\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: 0.64px;\n`;\n\nexport const Button = styled.button``;\n","import { Button, Form, Input, Label } from './UserForm.styled';\n\nconst UserForm = ({ isEditFormInactive, formik }) => {\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        onChange={formik.handleChange}\n        value={formik.values.name}\n        disabled={isEditFormInactive}\n        onBlur={formik.handleBlur}\n      />\n      {formik.touched.name && formik.errors.name ? (\n        <div>{formik.errors.name}</div>\n      ) : null}\n      <Label htmlFor=\"email\">Email</Label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n        disabled={isEditFormInactive}\n        onBlur={formik.handleBlur}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <Label htmlFor=\"birthday\">Birthday</Label>\n      <Input\n        type=\"date\"\n        id=\"birthday\"\n        name=\"birthday\"\n        onChange={formik.handleChange}\n        value={formik.values.birthday}\n        disabled={isEditFormInactive}\n        onBlur={formik.handleBlur}\n      />\n      {formik.touched.birthday && formik.errors.birthday ? (\n        <div>{formik.errors.birthday}</div>\n      ) : null}\n      <Label htmlFor=\"phone\">Phone</Label>\n      <Input\n        type=\"tel\"\n        id=\"phone\"\n        name=\"phone\"\n        onChange={formik.handleChange}\n        value={formik.values.phone}\n        disabled={isEditFormInactive}\n        onBlur={formik.handleBlur}\n      />\n      {formik.touched.phone && formik.errors.phone ? (\n        <div>{formik.errors.phone}</div>\n      ) : null}\n      <Label htmlFor=\"city\">City</Label>\n      <Input\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        onChange={formik.handleChange}\n        value={formik.values.city}\n        disabled={isEditFormInactive}\n        onBlur={formik.handleBlur}\n      />\n      {formik.touched.city && formik.errors.city ? (\n        <div>{formik.errors.city}</div>\n      ) : null}\n      {!isEditFormInactive && <Button type=\"submit\">Save</Button>}\n    </Form>\n  );\n};\n\nexport default UserForm;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.75rem;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 24.6875rem;\n  height: 32.5rem;\n\n  border-radius: 2.5rem;\n  background: var(--white);\n\n  /* Shadow default */\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n`;\n\nexport const CardBtn = styled.button`\n  position: absolute;\n  top: 1.13rem;\n  right: 1.13rem;\n  color: var(--blueLink);\n  cursor: pointer;\n`;\n\nexport const AvatarContainer = styled.div``;\n\nexport const Avatar = styled.img`\n  width: 11.375rem;\n  height: 11.375rem;\n`;\n\nexport const UploadBtn = styled.label`\n  cursor: pointer;\n`;\n\nexport const UploadInput = styled.input`\n  display: none;\n`;\n","import * as Yup from 'yup';\n\nconst emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegExp = /^\\+380\\d{9}$/;\nconst dateRegExp = /^\\d{4}-\\d{2}-\\d{2}$/;\n\nexport const validateUserSchema = Yup.object({\n  name: Yup.string()\n    .required('Please enter your name.')\n    .min(2, 'Name too short.')\n    .max(16, 'Name too long.'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Invalid email format.')\n    .required('Email is required'),\n  birthday: Yup.string().matches(dateRegExp, 'Please use YYYY-MM-DD format.'),\n  phone: Yup.string().matches(phoneRegExp, 'Please use +380XXXXXXXXX format.'),\n  city: Yup.string(),\n});\n","import UserForm from 'components/UserForm/UserForm';\nimport {\n  CardBtn,\n  Card,\n  Section,\n  Title,\n  AvatarContainer,\n  Avatar,\n  UploadBtn,\n  UploadInput,\n} from './UserData.styled';\nimport { useEffect, useRef, useState } from 'react';\nimport { LuPencilLine } from 'react-icons/lu';\nimport { GrClose } from 'react-icons/gr';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/AuthSlice';\nimport { refreshUser, updateUser } from 'redux/AuthSlice/operations';\nimport LogoutBtn from 'components/Header/LogoutBtn/LogoutBtn';\nimport { validateUserSchema } from 'helpers/validateUserSchema';\n\n// const defaultAvatarUrl = '/yourPets-project-front/defaultAvatar.png';\n\nconst UserData = () => {\n  const [isEditFormInactive, setIsEditFormInactive] = useState(true);\n  const [uploadAvatarURL, setUploadAvatarURL] = useState(null);\n  const [uploadedAvatar, setUploadedAvatar] = useState(false);\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n\n  const fileInputRef = useRef();\n  const formik = useFormik({\n    initialValues: {\n      name: user.name,\n      email: user.email,\n      birthday: user.birthday,\n      phone: user.phone,\n      city: user.city,\n    },\n    validationSchema: validateUserSchema,\n    onSubmit: async values => {\n      const formData = new FormData();\n\n      for (const key in values) {\n        formData.append(key, values[key]);\n      }\n\n      if (fileInputRef.current.files[0]) {\n        const file = fileInputRef.current.files[0];\n        formData.append('avatar', file);\n        fileInputRef.current.value = null;\n      }\n\n      const res = await dispatch(updateUser(formData));\n\n      if (updateUser.fulfilled.match(res)) {\n        setIsEditFormInactive(true);\n        return;\n      }\n      alert('database error, please try again later');\n    },\n  });\n\n  const handleAvatarConfirm = e => {\n    e.preventDefault();\n    setUploadedAvatar(false);\n  };\n\n  const handleAvatarChange = e => {\n    const file = e.currentTarget.files[0];\n\n    if (file) {\n      const newAvatarUrl = URL.createObjectURL(file);\n      setUploadAvatarURL(newAvatarUrl);\n      setUploadedAvatar(true);\n    }\n  };\n\n  const handleAvatarRemove = () => {\n    setUploadAvatarURL(null);\n    setUploadedAvatar(false);\n    fileInputRef.current.value = null;\n  };\n\n  return (\n    <Section>\n      <Title>My information:</Title>\n      <Card>\n        <CardBtn\n          as={isEditFormInactive ? LuPencilLine : GrClose}\n          onClick={() => setIsEditFormInactive(!isEditFormInactive)}\n        />\n        <AvatarContainer>\n          <Avatar src={uploadAvatarURL ?? user.avatarURL} alt=\"User avatar\" />\n          {!isEditFormInactive && (\n            <form onSubmit={handleAvatarConfirm}>\n              <UploadInput\n                id=\"file-upload\"\n                type=\"file\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                onChange={handleAvatarChange}\n                ref={fileInputRef}\n              />\n              {uploadedAvatar ? (\n                <>\n                  <button type=\"submit\">Confirm</button>\n                  <button type=\"button\" onClick={handleAvatarRemove}>\n                    X\n                  </button>\n                </>\n              ) : (\n                <UploadBtn htmlFor=\"file-upload\">Edit Photo</UploadBtn>\n              )}\n            </form>\n          )}\n        </AvatarContainer>\n        <UserForm isEditFormInactive={isEditFormInactive} formik={formik} />\n        <LogoutBtn />\n      </Card>\n    </Section>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 2rem;\n`;\n","import PetsData from 'components/PetsData/PetsData';\nimport UserData from 'components/UserData/UserData';\nimport { Wrapper } from './UserPage.styled';\n\nconst UserPage = () => {\n  return (\n    <Wrapper>\n      <UserData />\n      <PetsData />\n    </Wrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["Card","styled","Image","DataWrapper","Text","TextTitle","pet","image","type","name","datebirth","comments","src","alt","width","height","loading","fethMyPetsAPI","url","axios","responce","data","console","log","List","ListItem","useState","myPets","setMyPets","getMyPets","useEffect","map","id","Section","Title","Form","Label","Input","Button","isEditFormInactive","formik","onSubmit","handleSubmit","htmlFor","onChange","handleChange","value","values","disabled","onBlur","handleBlur","touched","errors","email","birthday","phone","city","CardBtn","AvatarContainer","Avatar","UploadBtn","UploadInput","validateUserSchema","Yup","required","min","max","matches","setIsEditFormInactive","uploadAvatarURL","setUploadAvatarURL","uploadedAvatar","setUploadedAvatar","user","useSelector","selectUser","dispatch","useDispatch","refreshUser","fileInputRef","useRef","useFormik","initialValues","validationSchema","key","formData","FormData","append","current","files","file","updateUser","res","alert","as","LuPencilLine","GrClose","onClick","avatarURL","e","preventDefault","accept","currentTarget","newAvatarUrl","URL","createObjectURL","ref","LogoutBtn","Wrapper"],"sourceRoot":""}