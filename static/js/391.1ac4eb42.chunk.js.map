{"version":3,"file":"static/js/391.1ac4eb42.chunk.js","mappings":"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","sources":["components/BackgroundImg/BackgroundImg.styled.js","components/BackgroundImg/BackgroundImg.jsx","pages/AddPetPage/AddPetPage.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.styled.js","components/AddPetForm/BackgroundCard/BackgroundCard.jsx","components/AddPetForm/StepsBlock/StepsBlock.styled.js","components/AddPetForm/StepsBlock/StepsBlock.jsx","components/AddPetForm/FieldRadio/FieldRadio.styled.js","components/AddPetForm/FieldRadio/FieldRadio.jsx","components/AddPetForm/ErrorComponent/ErrorComponent.styled.js","components/AddPetForm/ErrorComponent/ErrorComponent.jsx","components/AddPetForm/Step1/ChooseOptionForm.styled.js","components/AddPetForm/ButtonsBlock/ButtonsBlock.styled.js","components/AddPetForm/Step1/ChooseOptionForm.jsx","components/AddPetForm/Step2/PersonalDetailsForm.styled.js","components/AddPetForm/Step2/PersonalDetailsForm.jsx","components/AddPetForm/PreviewImage/PreviewImage.styled.js","components/AddPetForm/PreviewImage/PreviewImage.jsx","components/AddPetForm/Step3/AddMoreDetails.styled.js","components/AddPetForm/Step3/AddMoreDetailsForm.jsx","components/AddPetForm/GenderFieldRadio/GenderFieldRadio.styled.js","components/AddPetForm/GenderFieldRadio/GenderFieldRadio.jsx","components/AddPetForm/Step3/SellMoreDetailsForm.styled.js","components/AddPetForm/Step3/SellMoreDetailsForm.jsx","components/AddPetForm/Step3/MoreDetailsForm.jsx","components/AddPetForm/AddPetForm.jsx","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport bgMobile1x from '../../images/background/bg-mobile@1x.png';\nimport bgMobile2x from '../../images/background/bg-mobile@2x.png';\nimport bgTablet1x from '../../images/background/bg-tablet@1x.png';\nimport bgTablet2x from '../../images/background/bg-tablet@2x.png';\nimport bgDesktop1x from '../../images/background/bg-desktop@1x.png';\nimport bgDesktop2x from '../../images/background/bg-desktop@2x.png';\n\nexport const StyledBackgroundImg = styled.div`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-color: var(--background);\n  background-image: url(${bgMobile1x});\n  background-repeat: no-repeat;\n\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    background-image: url(${bgMobile2x});\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${bgTablet1x});\n\n    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n      background-image: url(${bgTablet2x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesktop1x});\n\n    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n      background-image: url(${bgDesktop2x});\n    }\n  }\n`;\n","import { StyledBackgroundImg } from './BackgroundImg.styled';\n\nconst BackgroundImg = ({ children }) => {\n  return <StyledBackgroundImg>{children}</StyledBackgroundImg>;\n};\n\nexport default BackgroundImg;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 40px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 280px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 40px;\n  background: #fff;\n  margin: 0 auto;\n  padding: 20px 8px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 32px;\n    width: 458px;\n  }\n`;\n","import React from 'react';\nimport { Card } from './BackgroundCard.styled';\n\nexport default function BackgroundCard({ children }) {\n  return <Card>{children}</Card>;\n}\n","import styled from 'styled-components';\n\nexport const StepsBlockWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 12px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    width: 392px;\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const StepBlock = styled.div`\n  width: 100%;\n`;\n\nexport const StepName = styled.p`\n  color: ${props => props.color || 'var(--gray)'};\n  text-align: start;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: normal;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 27px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const StepLine = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: ${props => props.color || 'var(--blueLight)'};\n`;\n","import React from 'react';\nimport {\n  StepBlock,\n  StepLine,\n  StepName,\n  StepsBlockWrapper,\n} from './StepsBlock.styled';\n\nconst StepsBlock = ({ step }) => {\n  let firstStepColor = '';\n  let secondStepColor = '';\n  let thirdStepColor = '';\n\n  switch (step) {\n    case 1:\n      firstStepColor = '#54ADFF';\n      break;\n    case 2:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#54ADFF';\n      break;\n    case 3:\n      firstStepColor = '#00C3AD';\n      secondStepColor = '#00C3AD';\n      thirdStepColor = '#54ADFF';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <StepsBlockWrapper>\n      <StepBlock>\n        <StepName color={firstStepColor}>Choose option</StepName>\n        <StepLine color={firstStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={secondStepColor}>Persons details</StepName>\n        <StepLine color={secondStepColor} />\n      </StepBlock>\n      <StepBlock>\n        <StepName color={thirdStepColor}>More info</StepName>\n        <StepLine color={thirdStepColor} />\n      </StepBlock>\n    </StepsBlockWrapper>\n  );\n};\n\nexport default StepsBlock;\n","import styled from 'styled-components';\n\nexport const Label = styled.label``;\n\nexport const Text = styled.span`\n  display: inline-block;\n  color: ${props => (props.checked ? '#fff' : '#54ADFF')};\n  background-color: ${props => (props.checked ? '#54ADFF' : '#CCE4FB')};\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 40px;\n  transition: all 300ms ease;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.56px;\n`;\n\nexport const Input = styled.input`\n  width: 0px;\n  height: 0px;\n  opacity: 0;\n  visibility: hidden;\n`;\n","import { Input, Label, Text } from './FieldRadio.styled';\n\nfunction FieldRadio({ value, text, onChange, checked }) {\n  return (\n    <>\n      <Label htmlFor={value}>\n        <Text checked={checked}>{text}</Text>\n      </Label>\n      <Input\n        id={value}\n        name=\"noticeType\"\n        type=\"radio\"\n        onChange={onChange}\n        value={value}\n        checked={checked}\n      />\n    </>\n  );\n}\n\nexport default FieldRadio;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  color: var(--red);\n  padding-left: 16px;\n`;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from './ErrorComponent.styled';\n\nconst ErrorComponent = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default ErrorComponent;\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\n\nexport const Title = styled.h1`\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: normal;\n  margin-bottom: 24px;\n  margin-left: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const FormChooseOption = styled(FormikForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const RadioWrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n  margin-bottom: 68px;\n\n  @media screen and (min-width: 768px) {\n    gap: 12px;\n    margin-bottom: 112px;\n  }\n`;\n","import styled, { css } from 'styled-components';\n\n// Buttons styles\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n    justify-content: center;\n    gap: 32px;\n  }\n`;\n\nexport const BtnIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  transition: fill 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nconst sharedStyles = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  height: 38px;\n  border: none;\n\n  cursor: pointer;\n\n  font-family: Manrope, sans-serif;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.36;\n  letter-spacing: 0.3px;\n\n  &:hover,\n  &:focus {\n    border: none;\n  }\n`;\n\nexport const ButtonWhite = styled.button`\n  ${sharedStyles};\n  padding: 0;\n  color: var(--blueLink);\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    /* flex-basis: 33%; */\n  }\n`;\n\nexport const ButtonBlue = styled.button`\n  ${sharedStyles};\n  width: 248px;\n  padding: 8px 28px;\n  color: var(--background);\n  background-color: var(--blueLink);\n  border-radius: 40px;\n\n  &:disabled {\n    cursor: no-drop;\n    background-color: #cce4fb;\n  }\n\n  @media screen and (min-width: 768px) {\n    /* flex-basis: 66%; */\n    margin: 0;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nimport BackgroundCard from '../BackgroundCard';\nimport StepsBlock from '../StepsBlock';\nimport FieldRadio from '../FieldRadio/FieldRadio';\nimport ErrorComponent from '../ErrorComponent';\n\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  Title,\n  FormChooseOption,\n  RadioWrapper,\n} from './ChooseOptionForm.styled';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\n\nconst stepOneValidationSchema = Yup.object().shape({\n  noticeType: Yup.string()\n    .required('Choose one of the available categories')\n    .oneOf(['sell', 'lost-found', 'in-good-hands', 'your-pet']),\n});\n\nconst ChooseOptionForm = ({ next, data }) => {\n  const handleSubmit = values => {\n    next(values);\n  };\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <BackgroundCard>\n        <Title>Add pet</Title>\n        <StepsBlock step={1} />\n        <Formik\n          validationSchema={stepOneValidationSchema}\n          initialValues={data}\n          onSubmit={handleSubmit}\n        >\n          {({ values, setFieldValue }) => (\n            <FormChooseOption>\n              <RadioWrapper>\n                <FieldRadio\n                  onChange={() => {\n                    setFieldValue('noticeType', 'your-pet');\n                  }}\n                  text=\"your pet\"\n                  value=\"your-pet\"\n                  checked={values.noticeType === 'your-pet'}\n                />\n                <FieldRadio\n                  onChange={() => setFieldValue('noticeType', 'sell')}\n                  text=\"sell\"\n                  value=\"sell\"\n                  checked={values.noticeType === 'sell'}\n                />\n                <FieldRadio\n                  onChange={() => setFieldValue('noticeType', 'lost-found')}\n                  text=\"lost/found\"\n                  value=\"lost-found\"\n                  checked={values.noticeType === 'lost-found'}\n                />\n                <FieldRadio\n                  onChange={() => setFieldValue('noticeType', 'in-good-hands')}\n                  text=\"in good hands\"\n                  value=\"in-good-hands\"\n                  checked={values.noticeType === 'in-good-hands'}\n                />\n\n                <ErrorComponent name=\"noticeType\" />\n              </RadioWrapper>\n\n              <ButtonsWrapper>\n                <ButtonBlue type=\"submit\">\n                  Next\n                  <BtnIcon>\n                    <use\n                      href={`${sprite}#icon-pawprint-1`}\n                      fill=\"var(--background)\"\n                    />\n                  </BtnIcon>\n                </ButtonBlue>\n                <ButtonWhite\n                  type=\"button\"\n                  onClick={() => {\n                    navigate('/user');\n                  }}\n                >\n                  <BtnIcon>\n                    <use\n                      href={`${sprite}#icon-arrow-left`}\n                      stroke=\"var(--blueLink)\"\n                    />\n                  </BtnIcon>\n                  Cancel\n                </ButtonWhite>\n              </ButtonsWrapper>\n            </FormChooseOption>\n          )}\n        </Formik>\n      </BackgroundCard>\n    </>\n  );\n};\n\nexport default ChooseOptionForm;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const FormPersonalDetails = styled(FormikForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 4px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const DetailInput = styled(Field)`\n  display: block;\n  width: 264px;\n  padding: 8px 16px;\n  align-items: center;\n\n  border-radius: 40px;\n  border: 1px solid var(--blueLink);\n\n  &:hover,\n  &:focus {\n    border: 1px solid var(--blueLink);\n  }\n\n  &::placeholder {\n    color: var(--gray);\n    font-family: Manrope;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 21px;\n    letter-spacing: 0.56px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 394px;\n    padding: 12px 16px;\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: 24px;\n      letter-spacing: 0.64px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const DetailLabel = styled.label`\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 27px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React from 'react';\n\nimport BackgroundCard from '../BackgroundCard';\nimport StepsBlock from '../StepsBlock';\nimport ErrorComponent from '../ErrorComponent';\n\nimport {\n  FormPersonalDetails,\n  FieldsWrapper,\n  DetailWrapper,\n  DetailInput,\n  DetailLabel,\n} from './PersonalDetailsForm.styled';\nimport { Title } from '../Step1/ChooseOptionForm.styled';\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\n\nconst stepTwoValidationSchemaAdd = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Enter the pet's name\")\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  birthday: Yup.string()\n    .required('Enter the date in DD-MM-YYYY format')\n    .matches(\n      /^(19|20)\\d\\d-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/,\n      'Invalid date format'\n    ),\n\n  petType: Yup.string()\n    .required('Enter the type')\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n});\n\nconst stepTwoValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Enter the pet's name\")\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  birthday: Yup.string()\n    .required('Enter the date in DD-MM-YYYY format')\n    .matches(\n      /^(19|20)\\d\\d-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/,\n      'Invalid date format'\n    ),\n\n  petType: Yup.string()\n    .required('Enter the type')\n    .min(2, 'min 2 symbols')\n    .max(16, 'max 16 symbols'),\n\n  title: Yup.string()\n    .required('Enter the title of the add')\n    .min(3, 'min 3 symbols')\n    .max(60, 'max 60 symbols'),\n});\n\nconst PersonalDetailsForm = ({ next, prev, data }) => {\n  const handleSubmit = values => {\n    next(values);\n  };\n\n  return (\n    <BackgroundCard>\n      <Title>Add pet</Title>\n      <StepsBlock step={2} />\n      <Formik\n        validationSchema={\n          data.noticeType !== 'your-pet'\n            ? stepTwoValidationSchema\n            : stepTwoValidationSchemaAdd\n        }\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        {({ values }) => (\n          <FormPersonalDetails>\n            <FieldsWrapper>\n              {values.noticeType !== 'your-pet' && (\n                <DetailWrapper>\n                  <DetailLabel htmlFor=\"title\"> Title of add</DetailLabel>\n                  <DetailInput\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"Enter title of add\"\n                  ></DetailInput>\n                  <ErrorComponent name=\"title\" />\n                </DetailWrapper>\n              )}\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"name\"> Pet's name</DetailLabel>\n                <DetailInput\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Type name pet\"\n                ></DetailInput>\n                <ErrorComponent name=\"name\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"birthday\"> Date Of Birth</DetailLabel>\n                <DetailInput\n                  id=\"birthday\"\n                  name=\"birthday\"\n                  placeholder=\"YYYY-MM-DD\"\n                ></DetailInput>\n                <ErrorComponent name=\"birthday\" />\n              </DetailWrapper>\n\n              <DetailWrapper>\n                <DetailLabel htmlFor=\"petType\"> Type</DetailLabel>\n                <DetailInput\n                  id=\"petType\"\n                  name=\"petType\"\n                  placeholder=\"Type of pet\"\n                ></DetailInput>\n                <ErrorComponent name=\"petType\" />\n              </DetailWrapper>\n            </FieldsWrapper>\n\n            <ButtonsWrapper>\n              <ButtonBlue type=\"submit\">\n                Next\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-pawprint-1`}\n                    fill=\"var(--background)\"\n                  />\n                </BtnIcon>\n              </ButtonBlue>\n              <ButtonWhite type=\"button\" onClick={() => prev(values)}>\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-arrow-left`}\n                    stroke=\"var(--blueLink)\"\n                  />\n                </BtnIcon>\n                Back\n              </ButtonWhite>\n            </ButtonsWrapper>\n          </FormPersonalDetails>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default PersonalDetailsForm;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import React, { useState } from 'react';\nimport { Image } from './PreviewImage.styled';\n\nconst PreviewImage = ({ photo }) => {\n  const [preview, setPreview] = useState(null);\n\n  const reader = new FileReader();\n  reader.readAsDataURL(photo);\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n\n  return <Image src={preview} alt=\"Preview\" />;\n};\n\nexport default PreviewImage;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const FormAddMoreDetails = styled(FormikForm)`\n  width: 100%;\n`;\n\nexport const BlocksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 24px;\n  padding-bottom: 20px;\n\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 27px;\n  }\n`;\n// PhotoBlock\nexport const PhotoBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n  }\n`;\nexport const PhotoLabel = styled.label`\n  display: inline-block;\n  width: 81px;\n  height: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 114px;\n  }\n`;\nexport const ImagePreview = styled.div`\n  position: relative;\n  width: 112px;\n  height: 112px;\n  border-radius: 20px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 182px;\n    height: 182px;\n    border-radius: 40px;\n    margin-right: auto;\n  }\n`;\nexport const DefaultImage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--blueLight);\n`;\nexport const UploadIcon = styled.svg`\n  width: 48px;\n  height: 48px;\n`;\nexport const PhotoInput = styled.input`\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: none;\n  }\n`;\n\n// CommentsBlock\nexport const DetailWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n`;\nexport const CommentsInput = styled(Field)`\n  display: flex;\n  text-align: start;\n  justify-content: center;\n  width: 100%;\n  padding: 8px 16px;\n  border: 1px solid var(--blueLink);\n\n  flex-shrink: 0;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  overflow-y: auto;\n\n  border-radius: 20px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid var(--blueLink);\n  }\n\n  &::placeholder {\n    color: var(--gray);\n    font-family: Manrope;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 21px;\n    letter-spacing: 0.56px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 16px;\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: 24px;\n      letter-spacing: 0.64px;\n    }\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useRef } from 'react';\n\nimport BackgroundCard from '../BackgroundCard';\nimport PreviewImage from '../PreviewImage/PreviewImage';\nimport ErrorComponent from '../ErrorComponent';\n\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  FormAddMoreDetails,\n  BlocksWrapper,\n  DetailWrapper,\n  PhotoBlock,\n  PhotoLabel,\n  ImagePreview,\n  DefaultImage,\n  UploadIcon,\n  PhotoInput,\n  CommentsInput,\n} from './AddMoreDetails.styled';\nimport StepsBlock from '../StepsBlock';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\n\nimport { Title } from '../Step1/ChooseOptionForm.styled';\n\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpeg', 'image/jpg'];\n\nconst stepThreeValidationSchema = Yup.object().shape({\n  photo: Yup.mixed()\n    .nullable()\n    .required('Select a file')\n    .test(\n      'FILE_SIZE',\n      'Uploaded file must be 3MB or less',\n      value => !value || (value && value.size <= 3145728)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file has unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst AddMoreDetailsForm = ({ next, prev, data }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n  const fileRef = useRef(null);\n\n  return (\n    <BackgroundCard>\n      <Title>Add pet</Title>\n      <StepsBlock step={3} />\n      <Formik\n        validationSchema={stepThreeValidationSchema}\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormAddMoreDetails>\n            <BlocksWrapper>\n              <PhotoBlock>\n                <PhotoLabel htmlFor=\"photo\">\n                  Load the <br /> pet’s image:\n                </PhotoLabel>\n\n                <ImagePreview>\n                  <PhotoInput\n                    ref={fileRef}\n                    hidden\n                    type=\"file\"\n                    id=\"photo\"\n                    name=\"photo\"\n                    onChange={event => {\n                      setFieldValue('photo', event.target.files[0]);\n                    }}\n                  />\n                  {values.photo !== null ? (\n                    <PreviewImage photo={values.photo} />\n                  ) : (\n                    <DefaultImage>\n                      <UploadIcon>\n                        <use\n                          href={`${sprite}#icon-plus`}\n                          stroke=\"var(--blueLink)\"\n                        />\n                      </UploadIcon>\n                    </DefaultImage>\n                  )}\n                </ImagePreview>\n                <ErrorComponent name=\"photo\" />\n              </PhotoBlock>\n\n              <DetailWrapper>\n                <label htmlFor=\"comments\"> Comments</label>\n                <CommentsInput\n                  id=\"comments\"\n                  name=\"comments\"\n                  placeholder=\"Enter your comments\"\n                  component=\"textarea\"\n                  rows=\"4\"\n                  noticeType={values.noticeType}\n                ></CommentsInput>\n                <ErrorComponent name=\"comments\" />\n              </DetailWrapper>\n            </BlocksWrapper>\n            <ButtonsWrapper>\n              <ButtonBlue type=\"submit\">\n                Done\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-pawprint-1`}\n                    fill=\"var(--background)\"\n                  />\n                </BtnIcon>\n              </ButtonBlue>\n              <ButtonWhite type=\"button\" onClick={() => prev(values)}>\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-arrow-left`}\n                    stroke=\"var(--blueLink)\"\n                  />\n                </BtnIcon>\n                Back\n              </ButtonWhite>\n            </ButtonsWrapper>\n          </FormAddMoreDetails>\n        )}\n      </Formik>\n    </BackgroundCard>\n  );\n};\n\nexport default AddMoreDetailsForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  background-color: ${props => (props.checked ? '#54ADFF' : '#fff')};\n  border-radius: 40px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: none;\n  }\n`;\nexport const Icon = styled.svg`\n  stroke: ${props => (props.checked ? '#fff' : props.stroke)};\n`;\nexport const Text = styled.span`\n  color: ${props => (props.checked ? '#fff' : '#ccc')};\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.64px;\n`;\n\nexport const Input = styled.input`\n  width: 0px;\n  height: 0px;\n  opacity: 0;\n  visibility: hidden;\n`;\n","import { Input, Label, Text, Icon } from './GenderFieldRadio.styled';\nimport sprite from '../../../images/icons/sprite.svg';\n\nfunction GenderFieldRadio({\n  value,\n  text,\n  onChange,\n  checked,\n  iconSize,\n  stroke,\n  iconName,\n}) {\n  return (\n    <>\n      <Label htmlFor={value} checked={checked}>\n        <Icon\n          width={iconSize || '24px'}\n          height={iconSize || '24px'}\n          checked={checked}\n          stroke={stroke}\n        >\n          <use href={`${sprite}#${iconName}`} />\n        </Icon>\n        <Text checked={checked}>{text}</Text>\n      </Label>\n      <Input\n        id={value}\n        name=\"sex\"\n        type=\"radio\"\n        onChange={onChange}\n        value={value}\n        checked={checked}\n      />\n    </>\n  );\n}\n\nexport default GenderFieldRadio;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 280px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 40px;\n  background: #fff;\n  margin: 0 auto;\n  padding: 20px 8px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 32px;\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 882px;\n  }\n`;\n\nexport const FormSellMoreDetails = styled(FormikForm)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const BlocksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 20px;\n\n  color: var(--black);\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 34px;\n\n    font-size: 20px;\n    line-height: 27px;\n  }\n`;\n// SexPhotoblock\nexport const SexPhotoblock = styled.div`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const Sexblock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const SexList = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 768px) {\n    gap: 4px;\n  }\n`;\n\nexport const PhotoBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    gap: 8px;\n  }\n`;\nexport const PhotoLabel = styled.label`\n  display: inline-block;\n  width: 81px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const ImagePreview = styled.div`\n  position: relative;\n  width: 112px;\n  height: 112px;\n  border-radius: 20px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 182px;\n    height: 182px;\n    border-radius: 40px;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const DefaultImage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--blueLight);\n`;\nexport const UploadIcon = styled.svg`\n  width: 48px;\n  height: 48px;\n`;\nexport const PhotoInput = styled.input`\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: none;\n  }\n`;\n\n// LocationPriceblock\nexport const LocationPriceBlock = styled.div`\n  flex: 2;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 4px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nconst InputStyles = `\ndisplay: flex;\ntext-align: start;\njustify-content: center;\nwidth: 100%;\npadding: 8px 16px;\nborder: 1px solid var(--blueLink);\n\n  &:hover,\n  &:focus {\n    border: 1px solid var(--blueLink);\n  }\n`;\n\nexport const DetailInput = styled(Field)`\n  ${InputStyles}\n  height: 40px;\n  border-radius: 40px;\n\n  &::placeholder {\n    color: var(--gray);\n    font-family: Manrope;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 21px;\n    letter-spacing: 0.56px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 48px;\n    padding: 12px 16px;\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: 24px;\n      letter-spacing: 0.64px;\n    }\n  }\n`;\n\nexport const CommentsInput = styled(Field)`\n  ${InputStyles}\n  height: 92px;\n  flex-shrink: 0;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  text-overflow: ellipsis;\n\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    height: 79px;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useRef } from 'react';\n\nimport PreviewImage from '../PreviewImage/PreviewImage';\nimport StepsBlock from '../StepsBlock';\nimport GenderFieldRadio from '../GenderFieldRadio';\nimport ErrorComponent from '../ErrorComponent';\n\nimport sprite from '../../../images/icons/sprite.svg';\nimport {\n  Card,\n  FormSellMoreDetails,\n  BlocksWrapper,\n  SexPhotoblock,\n  Sexblock,\n  SexList,\n  PhotoBlock,\n  ImagePreview,\n  DefaultImage,\n  PhotoInput,\n  PhotoLabel,\n  UploadIcon,\n  LocationPriceBlock,\n  DetailWrapper,\n  DetailInput,\n  CommentsInput,\n} from './SellMoreDetailsForm.styled';\nimport {\n  ButtonsWrapper,\n  ButtonBlue,\n  ButtonWhite,\n  BtnIcon,\n} from '../ButtonsBlock/ButtonsBlock.styled';\nimport { Title } from '../Step1/ChooseOptionForm.styled';\n\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpeg', 'image/jpg'];\n\nconst stepThreeValidationSchema = Yup.object().shape({\n  photo: Yup.mixed()\n    .nullable()\n    .required('Select a file')\n    .test(\n      'FILE_SIZE',\n      'Uploaded file must be 3MB or less',\n      value => !value || (value && value.size <= 3145728)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file has unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n\n  sex: Yup.string().required('Select gender').oneOf(['male', 'female']),\n\n  location: Yup.string().required('Enter location'),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst stepThreeValidationSchemaSell = Yup.object().shape({\n  photo: Yup.mixed()\n    .nullable()\n    .required('Select a file')\n    .test(\n      'FILE_SIZE',\n      'Uploaded file must be 3MB or less',\n      value => !value || (value && value.size <= 3145728)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file has unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n\n  sex: Yup.string().required('Select gender').oneOf(['male', 'female']),\n\n  location: Yup.string().required('Enter location'),\n\n  price: Yup.number()\n    .required('Enter price')\n    .min(1, 'The price must be greater than 0'),\n\n  comments: Yup.string().max(120, 'max 120 symbols'),\n});\n\nconst SellMoreDetailsForm = ({ next, prev, data }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n  const fileRef = useRef(null);\n\n  return (\n    <Card>\n      <Title>Add pet</Title>\n      <StepsBlock step={3} />\n      <Formik\n        validationSchema={\n          data.noticeType !== 'sell'\n            ? stepThreeValidationSchema\n            : stepThreeValidationSchemaSell\n        }\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormSellMoreDetails>\n            <BlocksWrapper>\n              <SexPhotoblock>\n                <Sexblock role=\"group\" aria-labelledby=\"gender-radio-group\">\n                  The Sex\n                  <SexList>\n                    <GenderFieldRadio\n                      value=\"female\"\n                      text=\"Female\"\n                      onChange={() => setFieldValue('sex', 'female')}\n                      checked={values.sex === 'female'}\n                      stroke=\"#F43F5E\"\n                      fill=\"\"\n                      iconName=\"icon-female\"\n                      iconSize=\"\"\n                    />\n                    <GenderFieldRadio\n                      value=\"male\"\n                      text=\"Male\"\n                      onChange={() => setFieldValue('sex', 'male')}\n                      checked={values.sex === 'male'}\n                      stroke=\"#54ADFF\"\n                      fill=\"\"\n                      iconName=\"icon-male\"\n                      iconSize=\"\"\n                    />\n                  </SexList>\n                  <ErrorComponent name=\"sex\" />\n                </Sexblock>\n                <PhotoBlock>\n                  <PhotoLabel htmlFor=\"photo\">Load the pet’s image:</PhotoLabel>\n                  <ImagePreview>\n                    <PhotoInput\n                      ref={fileRef}\n                      hidden\n                      type=\"file\"\n                      id=\"photo\"\n                      name=\"photo\"\n                      onChange={event => {\n                        setFieldValue('photo', event.target.files[0]);\n                      }}\n                    />\n                    {values.photo !== null ? (\n                      <PreviewImage photo={values.photo} />\n                    ) : (\n                      <DefaultImage>\n                        <UploadIcon>\n                          <use\n                            href={`${sprite}#icon-plus`}\n                            stroke=\"var(--blueLink)\"\n                          />\n                        </UploadIcon>\n                      </DefaultImage>\n                    )}\n                  </ImagePreview>\n                  <ErrorComponent name=\"photo\" />\n                </PhotoBlock>\n              </SexPhotoblock>\n\n              <LocationPriceBlock>\n                <DetailWrapper>\n                  <label htmlFor=\"location\"> Location</label>\n                  <DetailInput\n                    id=\"location\"\n                    name=\"location\"\n                    placeholder=\"Kyiv\"\n                  ></DetailInput>\n                  <ErrorComponent name=\"location\" />\n                </DetailWrapper>\n\n                {values.noticeType === 'sell' && (\n                  <DetailWrapper>\n                    <label htmlFor=\"price\"> Price</label>\n                    <DetailInput\n                      type=\"number\"\n                      id=\"price\"\n                      name=\"price\"\n                      placeholder=\"100\"\n                    ></DetailInput>\n                    <ErrorComponent name=\"price\" />\n                  </DetailWrapper>\n                )}\n\n                <DetailWrapper>\n                  <label htmlFor=\"comments\"> Comments</label>\n                  <CommentsInput\n                    id=\"comments\"\n                    name=\"comments\"\n                    placeholder=\"Enter your comments\"\n                    component=\"textarea\"\n                    rows=\"4\"\n                  ></CommentsInput>\n                  <ErrorComponent name=\"comments\" />\n                </DetailWrapper>\n              </LocationPriceBlock>\n            </BlocksWrapper>\n\n            <ButtonsWrapper>\n              <ButtonBlue type=\"submit\">\n                Done\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-pawprint-1`}\n                    fill=\"var(--background)\"\n                  />\n                </BtnIcon>\n              </ButtonBlue>\n              <ButtonWhite type=\"button\" onClick={() => prev(values)}>\n                <BtnIcon>\n                  <use\n                    href={`${sprite}#icon-arrow-left`}\n                    stroke=\"var(--blueLink)\"\n                  />\n                </BtnIcon>\n                Back\n              </ButtonWhite>\n            </ButtonsWrapper>\n          </FormSellMoreDetails>\n        )}\n      </Formik>\n    </Card>\n  );\n};\n\nexport default SellMoreDetailsForm;\n","import React from 'react';\n\nimport AddMoreDetailsForm from './AddMoreDetailsForm';\nimport SellMoreDetailsForm from './SellMoreDetailsForm';\n\nconst MoreDetailsForm = ({ next, prev, data }) => {\n  if (data.noticeType === 'your-pet') {\n    return <AddMoreDetailsForm next={next} prev={prev} data={data} />;\n  } else {\n    return <SellMoreDetailsForm next={next} prev={prev} data={data} />;\n  }\n};\n\nexport default MoreDetailsForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImg from '../BackgroundImg/BackgroundImg';\n\nimport ChooseOptionForm from './Step1/ChooseOptionForm';\nimport PersonalDetailsForm from './Step2/PersonalDetailsForm';\nimport MoreDetailsForm from './Step3/MoreDetailsForm';\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://yourpets-project-backend.onrender.com';\n\nfunction AddPetForm() {\n  const initialFormData = {\n    noticeType: 'your-pet',\n    name: '',\n    birthday: '',\n    petType: '',\n    title: '',\n    photo: null,\n    comments: '',\n    location: '',\n    price: 0,\n    sex: '',\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [currentStep, setCurrentStep] = useState(0);\n  const navigate = useNavigate();\n\n  const makeRequest = async formData => {\n    const requestData = new FormData();\n\n    try {\n      if (formData.noticeType === 'your-pet') {\n        for (const key in formData) {\n          if (\n            key !== 'noticeType' &&\n            key !== 'title' &&\n            key !== 'location' &&\n            key !== 'price' &&\n            key !== 'sex'\n          ) {\n            requestData.append(key, formData[key]);\n          }\n        }\n        await axios.post('/pets', requestData);\n\n        navigate('/user');\n      }\n      if (\n        formData.noticeType === 'lost/found' ||\n        formData.noticeType === 'in-good-hands'\n      ) {\n        for (const key in formData) {\n          if (key !== 'price') {\n            requestData.append(key, formData[key]);\n          }\n        }\n        await axios.post('/notices', requestData);\n\n        navigate('/notices/own');\n      } else {\n        for (const key in formData) {\n          requestData.append(key, formData[key]);\n        }\n\n        await axios.post('/notices', requestData);\n        navigate('/notices/own');\n      }\n    } catch (error) {\n      console.error('Error sending data:', error);\n    }\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setFormData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      setFormData(initialFormData);\n      setCurrentStep(0);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handleBackStep = newData => {\n    setFormData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n  const steps = [\n    <ChooseOptionForm next={handleNextStep} data={formData} />,\n    <PersonalDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n    <MoreDetailsForm\n      next={handleNextStep}\n      prev={handleBackStep}\n      data={formData}\n    />,\n  ];\n\n  return <BackgroundImg>{steps[currentStep]}</BackgroundImg>;\n}\n\nexport default AddPetForm;\n","import React from 'react';\nimport { Wrapper } from './AddPetPage.styled';\nimport AddPetForm from 'components/AddPetForm/AddPetForm';\n\nconst AddPetPage = () => {\n  return (\n    <Wrapper>\n      <AddPetForm />\n    </Wrapper>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["StyledBackgroundImg","styled","bgMobile1x","bgMobile2x","bgTablet1x","bgTablet2x","bgDesktop1x","bgDesktop2x","children","Wrapper","Card","BackgroundCard","StepsBlockWrapper","StepBlock","StepName","props","color","StepLine","firstStepColor","secondStepColor","thirdStepColor","step","Label","Text","checked","Input","value","text","onChange","htmlFor","id","name","type","ErrorText","render","message","Title","FormChooseOption","FormikForm","RadioWrapper","ButtonsWrapper","BtnIcon","sharedStyles","css","ButtonWhite","ButtonBlue","stepOneValidationSchema","Yup","shape","noticeType","required","oneOf","next","data","navigate","useNavigate","validationSchema","initialValues","onSubmit","values","setFieldValue","href","sprite","fill","onClick","stroke","FormPersonalDetails","FieldsWrapper","DetailWrapper","DetailInput","Field","DetailLabel","stepTwoValidationSchemaAdd","min","max","birthday","matches","petType","stepTwoValidationSchema","title","prev","placeholder","Image","photo","useState","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","src","alt","FormAddMoreDetails","BlocksWrapper","PhotoBlock","PhotoLabel","ImagePreview","DefaultImage","UploadIcon","PhotoInput","CommentsInput","SUPPORTED_FORMATS","stepThreeValidationSchema","nullable","test","size","includes","comments","fileRef","useRef","ref","hidden","event","target","files","component","rows","Icon","iconSize","iconName","width","height","FormSellMoreDetails","SexPhotoblock","Sexblock","SexList","LocationPriceBlock","InputStyles","sex","location","stepThreeValidationSchemaSell","price","role","axios","initialFormData","formData","setFormData","currentStep","setCurrentStep","makeRequest","requestData","FormData","key","append","console","error","handleNextStep","newData","final","handleBackStep","steps","BackgroundImg"],"sourceRoot":""}